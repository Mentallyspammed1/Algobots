{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-trading-signal.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview An AI agent that generates trading signals and market analysis.\n *\n * - generateTradingSignal - A function that generates trading signals and market analysis.\n * - GenerateTradingSignalInput - The input type for the generateTradingSignal function.\n * - GenerateTradingSignalOutput - The return type for the generateTradingSignal function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\nimport { getKlineData as fetchKlineData, getOrderBookData as fetchOrderBookData, getRecentTradesData as fetchRecentTradesData, getIndicatorData as fetchIndicatorData, getMarketData as fetchMarketData, analyzeOrderBook as anlyzeOrderBookUtil } from '@/lib/actions';\n\n// #region Schemas\nconst GenerateTradingSignalInputSchema = z.object({\n  symbol: z.string().describe('The trading symbol (e.g., BTCUSDT).'),\n  timeframe: z.string().describe('The timeframe for the chart and data (e.g., 1m, 5m, 1h, 1d).'),\n});\nexport type GenerateTradingSignalInput = z.infer<typeof GenerateTradingSignalInputSchema>;\n\nconst GenerateTradingSignalOutputSchema = z.object({\n  currentPrice: z.number().describe('The current price of the asset.'),\n  entryPrice: z.number().describe('The recommended entry price for the trade.'),\n  takeProfit: z.number().describe('The recommended take-profit price level.'),\n  stopLoss: z.number().describe('The recommended stop-loss price level.'),\n  signal: z.enum(['Buy', 'Sell', 'Hold']).describe('The trading signal: Buy, Sell, or Hold.'),\n  reasoning: z.string().describe('Detailed reasoning for the generated signal, based on market analysis.'),\n  confidenceLevel: z.enum(['High', 'Medium', 'Low']).describe('The confidence level of the signal.'),\n});\nexport type GenerateTradingSignalOutput = z.infer<typeof GenerateTradingSignalOutputSchema>;\n// #endregion\n\n// #region Tools\nconst getKlineData = ai.defineTool(\n    {\n        name: 'getKlineData',\n        description: 'Get candlestick (Kline) data for a given symbol and timeframe.',\n        inputSchema: z.object({ symbol: z.string(), timeframe: z.string() }),\n        outputSchema: z.any(),\n    },\n    async ({ symbol, timeframe }) => fetchKlineData(symbol, timeframe)\n);\n\nconst getOrderBookData = ai.defineTool(\n    {\n        name: 'getOrderBookData',\n        description: 'Get the order book (bids and asks) for a given symbol.',\n        inputSchema: z.object({ symbol: z.string() }),\n        outputSchema: z.any(),\n    },\n    async ({ symbol }) => fetchOrderBookData(symbol)\n);\n\nconst getRecentTradesData = ai.defineTool(\n    {\n        name: 'getRecentTradesData',\n        description: 'Get recent trades for a given symbol.',\n        inputSchema: z.object({ symbol: z.string() }),\n        outputSchema: z.any(),\n    },\n    async ({ symbol }) => fetchRecentTradesData(symbol)\n);\n\nconst getIndicatorData = ai.defineTool(\n    {\n        name: 'getIndicatorData',\n        description: 'Get a suite of technical indicators for a given symbol and timeframe.',\n        inputSchema: z.object({ symbol: z.string(), timeframe: z.string() }),\n        outputSchema: z.any(),\n    },\n    async ({ symbol, timeframe }) => fetchIndicatorData(symbol, timeframe)\n);\n\nconst getMarketData = ai.defineTool(\n    {\n        name: 'getMarketData',\n        description: 'Get general market data, including the current price, for a given symbol.',\n        inputSchema: z.object({ symbol: z.string() }),\n        outputSchema: z.any(),\n    },\n    async ({ symbol }) => fetchMarketData(symbol)\n);\n\nconst analyzeOrderBook = ai.defineTool(\n    {\n        name: 'analyzeOrderBook',\n        description: 'Analyze an order book to find key support and resistance levels.',\n        inputSchema: z.any(),\n        outputSchema: z.any(),\n    },\n    async (orderBook) => anlyzeOrderBookUtil(orderBook)\n);\n// #endregion\n\nexport async function generateTradingSignal(input: GenerateTradingSignalInput): Promise<GenerateTradingSignalOutput> {\n  return generateTradingSignalFlow(input);\n}\n\nconst tradingSignalPrompt = ai.definePrompt({\n  name: 'tradingSignalPrompt',\n  output: { format: 'json', schema: GenerateTradingSignalOutputSchema },\n  tools: [getKlineData, getOrderBookData, getRecentTradesData, getIndicatorData, getMarketData, analyzeOrderBook],\n  system: `You are a world-class AI financial advisor. Your task is to generate a trading signal.\n  \n  To do this, you must gather all necessary market data using the provided tools. Your analysis must be comprehensive, taking into account candlestick patterns, order book depth, recent trade activity, a suite of technical indicators, and key support/resistance levels that you derive from the order book.\n\n  Based on your analysis, you will formulate a clear, actionable trading signal. This includes:\n  1.  **Signal**: Determine whether to 'Buy', 'Sell', or 'Hold'.\n  2.  **Current Price**: Get the current price using the getMarketData tool.\n  3.  **Entry Price**: Suggest a specific price at which to enter the trade.\n  4.  **Take Profit (TP)**: A price at which to close the position for a profit.\n  5.  **Stop Loss (SL)**: A price at which to close the position to limit losses.\n  6.  **Reasoning**: Provide a detailed explanation for your signal, referencing the specific data points you've gathered (e.g., \"RSI is overbought,\" \"Significant support at $48,000 shown in order book,\" \"A bearish engulfing pattern is forming\").\n  7.  **Confidence Level**: Rate your confidence in this signal as 'High', 'Medium', or 'Low'.\n\n  Your final output must be a single JSON object that conforms to the specified output schema. Do not output anything else.`,\n});\n\nconst generateTradingSignalFlow = ai.defineFlow(\n  {\n    name: 'generateTradingSignalFlow',\n    inputSchema: GenerateTradingSignalInputSchema,\n    outputSchema: GenerateTradingSignalOutputSchema,\n  },\n  async (input) => {\n    const response = await tradingSignalPrompt({\n        prompt: `Generate a trading signal for ${input.symbol} on the ${input.timeframe} timeframe.`\n    });\n    \n    return response.output!;\n  }\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/bybit-api.ts"],"sourcesContent":["'use server';\n\nexport type TickerInfo = {\n  lastPrice: string;\n  highPrice24h: string;\n  lowPrice24h: string;\n  turnover24h: string; // Volume in quote currency (USDT)\n  volume24h: string; // Volume in base currency (e.g., BTC)\n};\n\nexport type OrderBookEntry = [string, string]; // [price, size]\n\nexport type OrderBook = {\n  bids: OrderBookEntry[];\n  asks: OrderBookEntry[];\n};\n\nexport type RecentTrade = {\n  execTime: string | number;\n  price: string;\n  qty: string;\n  side: 'Buy' | 'Sell';\n};\n\nexport type KlineEntry = [\n  string, // Start time\n  string, // Open\n  string, // High\n  string, // Low\n  string, // Close\n  string, // Volume\n  string  // Turnover\n]\n\nconst BYBIT_API_URL = 'https://api.bybit.com';\n\nasync function fetchFromBybit(endpoint: string, params: Record<string, string> = {}) {\n  const url = new URL(endpoint, BYBIT_API_URL);\n  url.search = new URLSearchParams(params).toString();\n  try {\n    const response = await fetch(url.toString(), { cache: 'no-store' });\n    if (!response.ok) {\n      throw new Error(`Bybit API error: ${response.statusText}`);\n    }\n    const data = await response.json();\n    if (data.retCode !== 0) {\n      throw new Error(`Bybit API error: ${data.retMsg}`);\n    }\n    return data.result;\n  } catch (error) {\n    console.error(`Failed to fetch from Bybit endpoint ${endpoint}:`, error);\n    throw error;\n  }\n}\n\nexport async function getTicker(symbol: string): Promise<TickerInfo | null> {\n  try {\n    const result = await fetchFromBybit('/v5/market/tickers', { category: 'spot', symbol });\n    if (result.list && result.list.length > 0) {\n      return result.list[0];\n    }\n    return null;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport async function getOrderBook(symbol: string): Promise<OrderBook | null> {\n  try {\n    // Limit to 20 levels for a cleaner view\n    const result = await fetchFromBybit('/v5/market/orderbook', { category: 'spot', symbol, limit: '20' });\n    return {\n      bids: result.b,\n      asks: result.a,\n    };\n  } catch (error) {\n    return null;\n  }\n}\n\nexport async function getRecentTrades(symbol: string): Promise<RecentTrade[] | null> {\n  try {\n    // Limit to 20 trades\n    const result = await fetchFromBybit('/v5/market/recent-trade', { category: 'spot', symbol, limit: '20' });\n    return result.list;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport async function getKline(symbol: string, interval: string): Promise<KlineEntry[] | null> {\n    try {\n        const intervalMap: { [key: string]: string } = {\n            '1m': '1',\n            '5m': '5',\n            '15m': '15',\n            '1h': '60',\n            '4h': '240',\n            '1d': 'D',\n        };\n        const bybitInterval = intervalMap[interval] || interval;\n        const result = await fetchFromBybit('/v5/market/kline', { category: 'spot', symbol, interval: bybitInterval, limit: '100' });\n        return result.list;\n    } catch(error) {\n        return null;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAkCA,MAAM,gBAAgB;AAEtB,eAAe,eAAe,QAAgB,EAAE,SAAiC,CAAC,CAAC;IACjF,MAAM,MAAM,IAAI,IAAI,UAAU;IAC9B,IAAI,MAAM,GAAG,IAAI,gBAAgB,QAAQ,QAAQ;IACjD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,IAAI,QAAQ,IAAI;YAAE,OAAO;QAAW;QACjE,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,iBAAiB,EAAE,SAAS,UAAU,EAAE;QAC3D;QACA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,IAAI,KAAK,OAAO,KAAK,GAAG;YACtB,MAAM,IAAI,MAAM,CAAC,iBAAiB,EAAE,KAAK,MAAM,EAAE;QACnD;QACA,OAAO,KAAK,MAAM;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,oCAAoC,EAAE,SAAS,CAAC,CAAC,EAAE;QAClE,MAAM;IACR;AACF;AAEO,eAAe,UAAU,MAAc;IAC5C,IAAI;QACF,MAAM,SAAS,MAAM,eAAe,sBAAsB;YAAE,UAAU;YAAQ;QAAO;QACrF,IAAI,OAAO,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM,GAAG,GAAG;YACzC,OAAO,OAAO,IAAI,CAAC,EAAE;QACvB;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,eAAe,aAAa,MAAc;IAC/C,IAAI;QACF,wCAAwC;QACxC,MAAM,SAAS,MAAM,eAAe,wBAAwB;YAAE,UAAU;YAAQ;YAAQ,OAAO;QAAK;QACpG,OAAO;YACL,MAAM,OAAO,CAAC;YACd,MAAM,OAAO,CAAC;QAChB;IACF,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,eAAe,gBAAgB,MAAc;IAClD,IAAI;QACF,qBAAqB;QACrB,MAAM,SAAS,MAAM,eAAe,2BAA2B;YAAE,UAAU;YAAQ;YAAQ,OAAO;QAAK;QACvG,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,eAAe,SAAS,MAAc,EAAE,QAAgB;IAC3D,IAAI;QACA,MAAM,cAAyC;YAC3C,MAAM;YACN,MAAM;YACN,OAAO;YACP,MAAM;YACN,MAAM;YACN,MAAM;QACV;QACA,MAAM,gBAAgB,WAAW,CAAC,SAAS,IAAI;QAC/C,MAAM,SAAS,MAAM,eAAe,oBAAoB;YAAE,UAAU;YAAQ;YAAQ,UAAU;YAAe,OAAO;QAAM;QAC1H,OAAO,OAAO,IAAI;IACtB,EAAE,OAAM,OAAO;QACX,OAAO;IACX;AACJ;;;IAnDsB;IAYA;IAaA;IAUA;;AAnCA,+OAAA;AAYA,+OAAA;AAaA,+OAAA;AAUA,+OAAA","debugId":null}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/indicators.ts"],"sourcesContent":["export interface RsiResult {\n  rsi: number;\n}\n\nexport interface MacdResult {\n  macd: number;\n  signal: number;\n  histogram: number;\n}\n\nexport interface BollingerBandsResult {\n  upper: number;\n  middle: number;\n  lower: number;\n}\n\nexport interface StochasticResult {\n  k: number;\n  d: number;\n}\n\nexport interface AtrResult {\n  atr: number;\n}\n\nexport interface ObvResult {\n  obv: number;\n}\n\nexport interface WilliamsRResult {\n  williamsR: number;\n}\n\nexport interface CciResult {\n  cci: number;\n}\n\nexport interface RocResult {\n  roc: number;\n}\n\nexport interface MfiResult {\n  mfi: number;\n}\n\nexport interface AwesomeOscillatorResult {\n    ao: number;\n}\n\nexport interface IchimokuCloudResult {\n    tenkanSen: number;\n    kijunSen: number;\n    senkouSpanA: number;\n    senkouSpanB: number;\n}\n\nexport interface SmaResult {\n    sma: number;\n}\n\nexport interface SupertrendResult {\n  supertrend: number;\n  direction: 'buy' | 'sell';\n  upperBand: number;\n  lowerBand: number;\n}\n\nexport interface IndicatorData {\n  rsi: RsiResult | null;\n  macd: MacdResult | null;\n  bollingerBands: BollingerBandsResult | null;\n  stochastic: StochasticResult | null;\n  atr: AtrResult | null;\n  obv: ObvResult | null;\n  williamsR: WilliamsRResult | null;\n  cci: CciResult | null;\n  roc: RocResult | null;\n  mfi: MfiResult | null;\n  awesomeOscillator: AwesomeOscillatorResult | null;\n  ichimokuCloud: IchimokuCloudResult | null;\n  sma: SmaResult | null;\n  supertrendFast: SupertrendResult | null;\n  supertrendSlow: SupertrendResult | null;\n}\n\nfunction calculateSMA(data: number[], period: number): number[] {\n  const sma: number[] = [];\n  if (data.length < period) return [];\n  let sum = 0;\n  for (let i = 0; i < period; i++) {\n    sum += data[i];\n  }\n  sma.push(sum / period);\n  for (let i = period; i < data.length; i++) {\n    sum = sum - data[i - period] + data[i];\n    sma.push(sum / period);\n  }\n  return sma;\n}\n\nfunction calculateEMA(data: number[], period: number): number[] {\n  if (data.length < period) return [];\n  const k = 2 / (period + 1);\n  const ema: number[] = [data[0]];\n  for (let i = 1; i < data.length; i++) {\n    ema.push(data[i] * k + ema[i - 1] * (1 - k));\n  }\n  return ema;\n}\n\nfunction calculateRSI(\n  data: number[],\n  period: number = 14\n): RsiResult | null {\n  if (data.length < period) return null;\n\n  let gains = 0;\n  let losses = 0;\n\n  for (let i = 1; i <= period; i++) {\n    const change = data[i] - data[i - 1];\n    if (change > 0) {\n      gains += change;\n    } else {\n      losses -= change;\n    }\n  }\n\n  let avgGain = gains / period;\n  let avgLoss = losses / period;\n\n  for (let i = period + 1; i < data.length; i++) {\n    const change = data[i] - data[i - 1];\n    let currentGain = change > 0 ? change : 0;\n    let currentLoss = change < 0 ? -change : 0;\n\n    avgGain = (avgGain * (period - 1) + currentGain) / period;\n    avgLoss = (avgLoss * (period - 1) + currentLoss) / period;\n  }\n\n  if (avgLoss === 0) return { rsi: 100 };\n\n  const rs = avgGain / avgLoss;\n  const rsi = 100 - (100 / (1 + rs));\n\n  return { rsi };\n}\n\nfunction calculateMACD(\n  data: number[],\n  fastPeriod: number = 12,\n  slowPeriod: number = 26,\n  signalPeriod: number = 9\n): MacdResult | null {\n  if (data.length < slowPeriod) return null;\n\n  const emaFast = calculateEMA(data, fastPeriod);\n  const emaSlow = calculateEMA(data, slowPeriod);\n\n  const macdLine = emaSlow.map((slow, i) => emaFast[i + slowPeriod - fastPeriod] - slow);\n\n  if (macdLine.length < signalPeriod) return null;\n\n  const signalLine = calculateEMA(macdLine, signalPeriod);\n  const histogram = macdLine.slice(macdLine.length - signalLine.length).map((macd, i) => macd - signalLine[i]);\n\n  return {\n    macd: macdLine[macdLine.length - 1],\n    signal: signalLine[signalLine.length - 1],\n    histogram: histogram[histogram.length - 1],\n  };\n}\n\nfunction calculateBollingerBands(\n  data: number[],\n  period: number = 20,\n  stdDev: number = 2\n): BollingerBandsResult | null {\n  if (data.length < period) return null;\n\n  const slice = data.slice(data.length - period);\n  const sma = slice.reduce((a, b) => a + b, 0) / period;\n  const standardDeviation = Math.sqrt(\n    slice.map(x => Math.pow(x - sma, 2)).reduce((a, b) => a + b, 0) / period\n  );\n\n  return {\n    upper: sma + stdDev * standardDeviation,\n    middle: sma,\n    lower: sma - stdDev * standardDeviation,\n  };\n}\n\nfunction calculateStochastic(\n  highs: number[],\n  lows: number[],\n  closes: number[],\n  period: number = 14,\n  kSlowing: number = 3\n): StochasticResult | null {\n  if (closes.length < period) return null;\n  const kLine: number[] = [];\n\n  for (let i = period - 1; i < closes.length; i++) {\n    const highSlice = highs.slice(i - period + 1, i + 1);\n    const lowSlice = lows.slice(i - period + 1, i + 1);\n    const highestHigh = Math.max(...highSlice);\n    const lowestLow = Math.min(...lowSlice);\n    const currentClose = closes[i];\n    const k = ((currentClose - lowestLow) / (highestHigh - lowestLow)) * 100;\n    kLine.push(k);\n  }\n\n  if (kLine.length < kSlowing) return null;\n\n  const dLine = calculateSMA(kLine.slice(kLine.length - kSlowing), kSlowing);\n\n  return {\n    k: kLine[kLine.length - 1],\n    d: dLine[dLine.length - 1],\n  };\n}\n\nfunction calculateTR(highs: number[], lows: number[], closes: number[]): number[] {\n  const tr: number[] = [highs[0] - lows[0]];\n  for (let i = 1; i < highs.length; i++) {\n    tr.push(Math.max(highs[i] - lows[i], Math.abs(highs[i] - closes[i - 1]), Math.abs(lows[i] - closes[i - 1])));\n  }\n  return tr;\n}\n\n\nfunction calculateATR(\n  highs: number[],\n  lows: number[],\n  closes: number[],\n  period: number = 14\n): AtrResult | null {\n  if (closes.length < period) return null;\n  const trs = calculateTR(highs, lows, closes);\n  const atr = calculateSMA(trs, period);\n  return atr.length > 0 ? { atr: atr[atr.length - 1] } : null;\n}\n\nfunction calculateOBV(\n  closes: number[],\n  volumes: number[],\n  period: number = 14\n): ObvResult | null {\n  if (closes.length < 2) return null;\n  let obv = 0;\n  for (let i = 1; i < closes.length; i++) {\n    if (closes[i] > closes[i - 1]) {\n      obv += volumes[i];\n    } else if (closes[i] < closes[i - 1]) {\n      obv -= volumes[i];\n    }\n  }\n  return { obv };\n}\n\nfunction calculateWilliamsR(\n  highs: number[],\n  lows: number[],\n  closes: number[],\n  period: number = 14\n): WilliamsRResult | null {\n  if (closes.length < period) return null;\n  const sliceHighs = highs.slice(highs.length - period);\n  const sliceLows = lows.slice(lows.length - period);\n  const highestHigh = Math.max(...sliceHighs);\n  const lowestLow = Math.min(...sliceLows);\n  const currentClose = closes[closes.length - 1];\n\n  const williamsR = ((highestHigh - currentClose) / (highestHigh - lowestLow)) * -100;\n\n  return { williamsR };\n}\n\nfunction calculateCCI(\n  highs: number[],\n  lows: number[],\n  closes: number[],\n  period: number = 20\n): CciResult | null {\n  if (closes.length < period) return null;\n  const typicalPrices = highs.map((h, i) => (h + lows[i] + closes[i]) / 3);\n  const sma = calculateSMA(typicalPrices.slice(typicalPrices.length - period), period);\n  const lastSma = sma[sma.length - 1];\n\n  const slice = typicalPrices.slice(typicalPrices.length - period);\n  const meanDeviation = slice.reduce((sum, price) => sum + Math.abs(price - lastSma), 0) / period;\n\n  const lastTypicalPrice = typicalPrices[typicalPrices.length - 1];\n  const cci = (lastTypicalPrice - lastSma) / (0.015 * meanDeviation);\n\n  return { cci };\n}\n\nfunction calculateROC(\n  closes: number[],\n  period: number = 14\n): RocResult | null {\n  if (closes.length < period + 1) return null;\n  const priorClose = closes[closes.length - 1 - period];\n  const currentClose = closes[closes.length - 1];\n  const roc = ((currentClose - priorClose) / priorClose) * 100;\n  return { roc };\n}\n\nfunction calculateMFI(\n  highs: number[],\n  lows: number[],\n  closes: number[],\n  volumes: number[],\n  period: number = 14\n): MfiResult | null {\n    if (closes.length < period + 1) return null;\n\n    const typicalPrices = closes.map((c, i) => (highs[i] + lows[i] + c) / 3);\n\n    let posMoneyFlow = 0;\n    let negMoneyFlow = 0;\n\n    for (let i = closes.length - period; i < closes.length; i++) {\n        const rawMoneyFlow = typicalPrices[i] * volumes[i];\n        if (typicalPrices[i] > typicalPrices[i-1]) {\n            posMoneyFlow += rawMoneyFlow;\n        } else if (typicalPrices[i] < typicalPrices[i-1]) {\n            negMoneyFlow += rawMoneyFlow;\n        }\n    }\n    \n    if (negMoneyFlow === 0) return { mfi: 100 };\n    const moneyRatio = posMoneyFlow / negMoneyFlow;\n    const mfi = 100 - (100 / (1 + moneyRatio));\n    return { mfi };\n}\n\n\nfunction calculateAwesomeOscillator(\n    highs: number[],\n    lows: number[],\n    fastPeriod: number = 5,\n    slowPeriod: number = 34\n): AwesomeOscillatorResult | null {\n    if (highs.length < slowPeriod) return null;\n    const midpoints = highs.map((h, i) => (h + lows[i]) / 2);\n    const smaFast = calculateSMA(midpoints, fastPeriod);\n    const smaSlow = calculateSMA(midpoints, slowPeriod);\n    const ao = smaFast[smaFast.length - 1] - smaSlow[smaSlow.length - slowPeriod + fastPeriod];\n    return { ao };\n}\n\nfunction calculateIchimokuCloud(\n    highs: number[],\n    lows: number[],\n    closes: number[],\n    tenkanPeriod: number = 9,\n    kijunPeriod: number = 26,\n    senkouSpanBPeriod: number = 52\n): IchimokuCloudResult | null {\n    if (closes.length < senkouSpanBPeriod) return null;\n\n    const tenkanSen = (Math.max(...highs.slice(highs.length - tenkanPeriod)) + Math.min(...lows.slice(lows.length - tenkanPeriod))) / 2;\n    const kijunSen = (Math.max(...highs.slice(highs.length - kijunPeriod)) + Math.min(...lows.slice(lows.length - kijunPeriod))) / 2;\n    \n    // Senkou Span A is forward looking, but for current analysis we use current tenkan/kijun\n    const senkouSpanA = (tenkanSen + kijunSen) / 2;\n    \n    const senkouSpanB = (Math.max(...highs.slice(highs.length - senkouSpanBPeriod)) + Math.min(...lows.slice(lows.length - senkouSpanBPeriod))) / 2;\n\n    return { tenkanSen, kijunSen, senkouSpanA, senkouSpanB };\n}\n\nfunction calculateSupertrend(\n  highs: number[],\n  lows: number[],\n  closes: number[],\n  atrPeriod: number,\n  multiplier: number\n): SupertrendResult | null {\n  if (closes.length < atrPeriod) return null;\n  const tr = calculateTR(highs, lows, closes);\n  const atr = calculateSMA(tr.slice(tr.length - atrPeriod), atrPeriod);\n  \n  if (atr.length === 0) return null;\n\n  const currentAtr = atr[atr.length - 1];\n  const close = closes[closes.length - 1];\n  const prevClose = closes[closes.length - 2];\n\n  let upperBand = (highs[highs.length - 1] + lows[lows.length - 1]) / 2 + multiplier * currentAtr;\n  let lowerBand = (highs[highs.length - 1] + lows[lows.length - 1]) / 2 - multiplier * currentAtr;\n  \n  // This is a simplified logic for trend determination. A full implementation would carry the state.\n  const direction = close > upperBand && prevClose <= upperBand ? 'buy' :\n                    close < lowerBand && prevClose >= lowerBand ? 'sell' :\n                    close > lowerBand ? 'buy' : 'sell';\n\n  const supertrend = direction === 'buy' ? lowerBand : upperBand;\n\n  return { supertrend, direction, upperBand, lowerBand };\n}\n\n\nexport function calculateIndicators(\n  closePrices: number[],\n  highPrices: number[],\n  lowPrices: number[],\n  volumes: number[]\n): IndicatorData {\n  return {\n    rsi: calculateRSI(closePrices),\n    macd: calculateMACD(closePrices),\n    bollingerBands: calculateBollingerBands(closePrices),\n    stochastic: calculateStochastic(highPrices, lowPrices, closePrices),\n    atr: calculateATR(highPrices, lowPrices, closePrices),\n    obv: calculateOBV(closePrices, volumes),\n    williamsR: calculateWilliamsR(highPrices, lowPrices, closePrices),\n    cci: calculateCCI(highPrices, lowPrices, closePrices),\n    roc: calculateROC(closePrices),\n    mfi: calculateMFI(highPrices, lowPrices, closePrices, volumes),\n    awesomeOscillator: calculateAwesomeOscillator(highPrices, lowPrices),\n    ichimokuCloud: calculateIchimokuCloud(highPrices, lowPrices, closePrices),\n    sma: { sma: calculateSMA(closePrices, 20).pop() || 0 },\n    supertrendFast: calculateSupertrend(highPrices, lowPrices, closePrices, 10, 2),\n    supertrendSlow: calculateSupertrend(highPrices, lowPrices, closePrices, 20, 3)\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { generateTradingSignal, type GenerateTradingSignalOutput } from '@/ai/flows/generate-trading-signal';\nimport { getTicker, getOrderBook, getRecentTrades, getKline, type OrderBook, type TickerInfo } from '@/lib/bybit-api';\nimport { calculateIndicators, type IndicatorData } from '@/lib/indicators';\n\nexport type AiSignalResponse = GenerateTradingSignalOutput;\n\nexport async function getAiTradingSignal(symbol: string, timeframe: string): Promise<{ success: boolean, analysis?: AiSignalResponse, error?: string }> {\n  try {\n    const result = await generateTradingSignal({ symbol, timeframe });\n    return { success: true, analysis: result };\n  } catch (error) {\n    console.error('Error generating AI trading signal:', error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return { success: false, error: errorMessage };\n  }\n}\n\nexport async function getMarketData(symbol: string): Promise<TickerInfo | null> {\n    return getTicker(symbol);\n}\n\nexport async function getOrderBookData(symbol: string): Promise<OrderBook | null> {\n    return getOrderBook(symbol);\n}\n\nexport async function getRecentTradesData(symbol: string) {\n    return getRecentTrades(symbol);\n}\n\nexport async function getKlineData(symbol: string, interval: string) {\n    return getKline(symbol, interval);\n}\n\nexport async function getIndicatorData(symbol: string, timeframe: string): Promise<IndicatorData | null> {\n    const klineData = await getKline(symbol, timeframe);\n    if (!klineData) return null;\n    // Data is from newest to oldest, reverse to have oldest first\n    const reversedKline = [...klineData].reverse();\n    const closePrices = reversedKline.map(k => parseFloat(k[4]));\n    const highPrices = reversedKline.map(k => parseFloat(k[2]));\n    const lowPrices = reversedKline.map(k => parseFloat(k[3]));\n    const volumes = reversedKline.map(k => parseFloat(k[6])); // Corrected to use turnover for volume\n    return calculateIndicators(closePrices, highPrices, lowPrices, volumes);\n}\n\n// Order Book Analysis\nexport async function analyzeOrderBook(orderBook: OrderBook) {\n  const bids = orderBook.bids.map(([price, size]) => ({ price: parseFloat(price), size: parseFloat(size) }));\n  const asks = orderBook.asks.map(([price, size]) => ({ price: parseFloat(price), size: parseFloat(size) }));\n\n  const findLevels = (orders: { price: number; size: number }[], count: number) => {\n    // Sort by size descending\n    const sorted = [...orders].sort((a, b) => b.size - a.size);\n    // Return the prices of the top `count` orders\n    return sorted.slice(0, count).map(o => o.price);\n  };\n  \n  // Find the top 3 most significant support (bids) and resistance (asks) levels\n  const supportLevels = findLevels(bids, 3);\n  const resistanceLevels = findLevels(asks, 3);\n\n  return {\n    support: supportLevels,\n    resistance: resistanceLevels,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AACA;AACA;;;;;;;AAIO,eAAe,mBAAmB,MAAc,EAAE,SAAiB;IACxE,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,mJAAA,CAAA,wBAAqB,AAAD,EAAE;YAAE;YAAQ;QAAU;QAC/D,OAAO;YAAE,SAAS;YAAM,UAAU;QAAO;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uCAAuC;QACrD,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO;YAAE,SAAS;YAAO,OAAO;QAAa;IAC/C;AACF;AAEO,eAAe,cAAc,MAAc;IAC9C,OAAO,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD,EAAE;AACrB;AAEO,eAAe,iBAAiB,MAAc;IACjD,OAAO,CAAA,GAAA,0HAAA,CAAA,eAAY,AAAD,EAAE;AACxB;AAEO,eAAe,oBAAoB,MAAc;IACpD,OAAO,CAAA,GAAA,0HAAA,CAAA,kBAAe,AAAD,EAAE;AAC3B;AAEO,eAAe,aAAa,MAAc,EAAE,QAAgB;IAC/D,OAAO,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ;AAC5B;AAEO,eAAe,iBAAiB,MAAc,EAAE,SAAiB;IACpE,MAAM,YAAY,MAAM,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ;IACzC,IAAI,CAAC,WAAW,OAAO;IACvB,8DAA8D;IAC9D,MAAM,gBAAgB;WAAI;KAAU,CAAC,OAAO;IAC5C,MAAM,cAAc,cAAc,GAAG,CAAC,CAAA,IAAK,WAAW,CAAC,CAAC,EAAE;IAC1D,MAAM,aAAa,cAAc,GAAG,CAAC,CAAA,IAAK,WAAW,CAAC,CAAC,EAAE;IACzD,MAAM,YAAY,cAAc,GAAG,CAAC,CAAA,IAAK,WAAW,CAAC,CAAC,EAAE;IACxD,MAAM,UAAU,cAAc,GAAG,CAAC,CAAA,IAAK,WAAW,CAAC,CAAC,EAAE,IAAI,uCAAuC;IACjG,OAAO,CAAA,GAAA,wHAAA,CAAA,sBAAmB,AAAD,EAAE,aAAa,YAAY,WAAW;AACnE;AAGO,eAAe,iBAAiB,SAAoB;IACzD,MAAM,OAAO,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,KAAK,GAAK,CAAC;YAAE,OAAO,WAAW;YAAQ,MAAM,WAAW;QAAM,CAAC;IACxG,MAAM,OAAO,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,KAAK,GAAK,CAAC;YAAE,OAAO,WAAW;YAAQ,MAAM,WAAW;QAAM,CAAC;IAExG,MAAM,aAAa,CAAC,QAA2C;QAC7D,0BAA0B;QAC1B,MAAM,SAAS;eAAI;SAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,GAAG,EAAE,IAAI;QACzD,8CAA8C;QAC9C,OAAO,OAAO,KAAK,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,IAAK,EAAE,KAAK;IAChD;IAEA,8EAA8E;IAC9E,MAAM,gBAAgB,WAAW,MAAM;IACvC,MAAM,mBAAmB,WAAW,MAAM;IAE1C,OAAO;QACL,SAAS;QACT,YAAY;IACd;AACF;;;IA3DsB;IAWA;IAIA;IAIA;IAIA;IAIA;IAaA;;AAxCA,+OAAA;AAWA,+OAAA;AAIA,+OAAA;AAIA,+OAAA;AAIA,+OAAA;AAIA,+OAAA;AAaA,+OAAA","debugId":null}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getMarketData as '40ecf96ec3829da1facb2822b20b7b6fb2faedc074'} from 'ACTIONS_MODULE0'\nexport {getOrderBookData as '404bceabf4524442855236b92fdc7049a3e2aa0d9e'} from 'ACTIONS_MODULE0'\nexport {getRecentTradesData as '40546c427da191d85510109d8d2a81504e9cfe5350'} from 'ACTIONS_MODULE0'\nexport {getAiTradingSignal as '60c6125dbbad3595350503c517b30b35b439281e36'} from 'ACTIONS_MODULE0'\nexport {getIndicatorData as '60901addb4aa828fa13a5df1151b80af96986e9baf'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 940, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 968, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}