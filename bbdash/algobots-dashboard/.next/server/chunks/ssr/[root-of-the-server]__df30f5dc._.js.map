{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supertrend.ts"],"sourcesContent":["\nimport { Indicator, IndicatorInput } from 'technicalindicators/lib/indicator/indicator';\nimport { ATR } from 'technicalindicators';\n\nexport class SupertrendInput extends IndicatorInput {\n  multiplier: number;\n  period: number;\n  high: number[];\n  low: number[];\n  close: number[];\n}\n\nexport interface SupertrendResult {\n  value: number;\n  direction: number;\n  up: number;\n  down: number;\n}\n\nexport class Supertrend extends Indicator {\n  result: SupertrendResult[];\n\n  constructor(input: SupertrendInput) {\n    super(input);\n    const atr = new ATR({\n      high: input.high,\n      low: input.low,\n      close: input.close,\n      period: input.period,\n    });\n    const atrValues = atr.result;\n    this.result = [];\n\n    if (atrValues.length === 0) {\n      return;\n    }\n\n    let direction = 1;\n    let up = (input.high[0] + input.low[0]) / 2 - input.multiplier * atrValues[0];\n    let down = (input.high[0] + input.low[0]) / 2 + input.multiplier * atrValues[0];\n    let trend = up;\n\n    for (let i = 1; i < input.close.length; i++) {\n      const currentClose = input.close[i];\n      const prevClose = input.close[i - 1];\n      const atrValue = atrValues[i-1];\n      \n      if (!atrValue) continue;\n\n      let newUp = (input.high[i] + input.low[i]) / 2 - input.multiplier * atrValue;\n      let newDown = (input.high[i] + input.low[i]) / 2 + input.multiplier * atrValue;\n      \n      if (direction === 1 && currentClose < trend) {\n        direction = -1;\n        trend = newDown;\n      } else if (direction === -1 && currentClose > trend) {\n        direction = 1;\n        trend = newUp;\n      } else {\n        if (direction === 1) {\n          trend = Math.max(trend, newUp);\n        } else {\n          trend = Math.min(trend, newDown);\n        }\n      }\n      \n      this.result.push({\n        value: trend,\n        direction: direction,\n        up: direction === 1 ? trend : newDown,\n        down: direction === -1 ? trend: newUp\n      });\n    }\n  }\n\n  static calculate(input: SupertrendInput): SupertrendResult[] {\n    Indicator.reverseInputs(input);\n    const result = new Supertrend(input).result;\n    if (input.reversedInput) {\n      result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n  }\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAEO,MAAM,wBAAwB,oKAAA,CAAA,iBAAc;IACjD,WAAmB;IACnB,OAAe;IACf,KAAe;IACf,IAAc;IACd,MAAgB;AAClB;AASO,MAAM,mBAAmB,oKAAA,CAAA,YAAS;IACvC,OAA2B;IAE3B,YAAY,KAAsB,CAAE;QAClC,KAAK,CAAC;QACN,MAAM,MAAM,IAAI,wKAAA,CAAA,MAAG,CAAC;YAClB,MAAM,MAAM,IAAI;YAChB,KAAK,MAAM,GAAG;YACd,OAAO,MAAM,KAAK;YAClB,QAAQ,MAAM,MAAM;QACtB;QACA,MAAM,YAAY,IAAI,MAAM;QAC5B,IAAI,CAAC,MAAM,GAAG,EAAE;QAEhB,IAAI,UAAU,MAAM,KAAK,GAAG;YAC1B;QACF;QAEA,IAAI,YAAY;QAChB,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,CAAC,EAAE,IAAI,IAAI,MAAM,UAAU,GAAG,SAAS,CAAC,EAAE;QAC7E,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,CAAC,EAAE,IAAI,IAAI,MAAM,UAAU,GAAG,SAAS,CAAC,EAAE;QAC/E,IAAI,QAAQ;QAEZ,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,IAAK;YAC3C,MAAM,eAAe,MAAM,KAAK,CAAC,EAAE;YACnC,MAAM,YAAY,MAAM,KAAK,CAAC,IAAI,EAAE;YACpC,MAAM,WAAW,SAAS,CAAC,IAAE,EAAE;YAE/B,IAAI,CAAC,UAAU;YAEf,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,CAAC,EAAE,IAAI,IAAI,MAAM,UAAU,GAAG;YACpE,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,CAAC,EAAE,IAAI,IAAI,MAAM,UAAU,GAAG;YAEtE,IAAI,cAAc,KAAK,eAAe,OAAO;gBAC3C,YAAY,CAAC;gBACb,QAAQ;YACV,OAAO,IAAI,cAAc,CAAC,KAAK,eAAe,OAAO;gBACnD,YAAY;gBACZ,QAAQ;YACV,OAAO;gBACL,IAAI,cAAc,GAAG;oBACnB,QAAQ,KAAK,GAAG,CAAC,OAAO;gBAC1B,OAAO;oBACL,QAAQ,KAAK,GAAG,CAAC,OAAO;gBAC1B;YACF;YAEA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBACf,OAAO;gBACP,WAAW;gBACX,IAAI,cAAc,IAAI,QAAQ;gBAC9B,MAAM,cAAc,CAAC,IAAI,QAAO;YAClC;QACF;IACF;IAEA,OAAO,UAAU,KAAsB,EAAsB;QAC3D,oKAAA,CAAA,YAAS,CAAC,aAAa,CAAC;QACxB,MAAM,SAAS,IAAI,WAAW,OAAO,MAAM;QAC3C,IAAI,MAAM,aAAa,EAAE;YACvB,OAAO,OAAO;QAChB;QACA,oKAAA,CAAA,YAAS,CAAC,aAAa,CAAC;QACxB,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/fisher.ts"],"sourcesContent":["\nimport { Indicator, IndicatorInput } from 'technicalindicators/lib/indicator/indicator';\n\n\nexport class FisherTransformInput extends IndicatorInput {\n    period: number;\n    high: number[];\n    low: number[];\n}\n\nexport class FisherTransformOutput {\n    fisher: number;\n    trigger: number;\n}\n\nexport class FisherTransform extends Indicator {\n    \n    // Note: The implementation is a refactored version of the original generator-based code.\n    // The non-standard smoothing logic has been preserved for consistency.\n    static calculate(input: FisherTransformInput): FisherTransformOutput[] {\n        Indicator.reverseInputs(input);\n\n        const { high, low, period } = input;\n        const results: FisherTransformOutput[] = [];\n\n        // Previous state values needed for the loop\n        let prevValue = 0;\n        let prevFisher = 0;\n\n        for (let i = 0; i < high.length; i++) {\n            // Determine the min/max over the lookback period\n            const start = Math.max(0, i - period + 1);\n            const periodHighs = high.slice(start, i + 1);\n            const periodLows = low.slice(start, i + 1);\n            const maxHigh = Math.max(...periodHighs);\n            const minLow = Math.min(...periodLows);\n            \n            const price = (high[i] + low[i]) / 2;\n\n            // Calculate normalized price term. This normalizes the price to a range of -0.5 to 0.5.\n            let normPrice = 0;\n            if (maxHigh - minLow !== 0) {\n                normPrice = ((price - minLow) / (maxHigh - minLow)) - 0.5;\n            }\n\n            // Apply the non-standard smoothing from the original implementation\n            let value = 0.33 * 2 * normPrice + 0.67 * prevValue;\n\n            // Clamp the value to avoid undefined results from Math.log\n            value = Math.max(-0.999, Math.min(0.999, value));\n            \n            // Calculate the Fisher Transform value and apply another non-standard smoothing\n            const fisherRaw = 0.5 * Math.log((1 + value) / (1 - value));\n            const fisher = fisherRaw + 0.5 * prevFisher;\n            \n            // The trigger is the fisher value from the previous period\n            const trigger = prevFisher;\n\n            results.push({ fisher, trigger });\n\n            // Update state for the next iteration\n            prevValue = value;\n            prevFisher = fisher;\n        }\n\n        if (input.reversedInput) {\n            results.reverse();\n        }\n\n        Indicator.reverseInputs(input);\n\n        return results;\n    }\n}\n"],"names":[],"mappings":";;;;;AACA;;AAGO,MAAM,6BAA6B,oKAAA,CAAA,iBAAc;IACpD,OAAe;IACf,KAAe;IACf,IAAc;AAClB;AAEO,MAAM;IACT,OAAe;IACf,QAAgB;AACpB;AAEO,MAAM,wBAAwB,oKAAA,CAAA,YAAS;IAE1C,yFAAyF;IACzF,uEAAuE;IACvE,OAAO,UAAU,KAA2B,EAA2B;QACnE,oKAAA,CAAA,YAAS,CAAC,aAAa,CAAC;QAExB,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG;QAC9B,MAAM,UAAmC,EAAE;QAE3C,4CAA4C;QAC5C,IAAI,YAAY;QAChB,IAAI,aAAa;QAEjB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;YAClC,iDAAiD;YACjD,MAAM,QAAQ,KAAK,GAAG,CAAC,GAAG,IAAI,SAAS;YACvC,MAAM,cAAc,KAAK,KAAK,CAAC,OAAO,IAAI;YAC1C,MAAM,aAAa,IAAI,KAAK,CAAC,OAAO,IAAI;YACxC,MAAM,UAAU,KAAK,GAAG,IAAI;YAC5B,MAAM,SAAS,KAAK,GAAG,IAAI;YAE3B,MAAM,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI;YAEnC,wFAAwF;YACxF,IAAI,YAAY;YAChB,IAAI,UAAU,WAAW,GAAG;gBACxB,YAAY,AAAC,CAAC,QAAQ,MAAM,IAAI,CAAC,UAAU,MAAM,IAAK;YAC1D;YAEA,oEAAoE;YACpE,IAAI,QAAQ,OAAO,IAAI,YAAY,OAAO;YAE1C,2DAA2D;YAC3D,QAAQ,KAAK,GAAG,CAAC,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO;YAEzC,gFAAgF;YAChF,MAAM,YAAY,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK;YACzD,MAAM,SAAS,YAAY,MAAM;YAEjC,2DAA2D;YAC3D,MAAM,UAAU;YAEhB,QAAQ,IAAI,CAAC;gBAAE;gBAAQ;YAAQ;YAE/B,sCAAsC;YACtC,YAAY;YACZ,aAAa;QACjB;QAEA,IAAI,MAAM,aAAa,EAAE;YACrB,QAAQ,OAAO;QACnB;QAEA,oKAAA,CAAA,YAAS,CAAC,aAAa,CAAC;QAExB,OAAO;IACX;AACJ","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/ehlers.ts"],"sourcesContent":["import { Indicator, IndicatorInput } from 'technicalindicators/lib/indicator/indicator';\n\nexport class EhlersInstantaneousTrendlineInput extends IndicatorInput {\n    values: number[];\n    period: number;\n}\n\nexport class EhlersInstantaneousTrendline extends Indicator {\n    result: number[];\n\n    constructor(input: EhlersInstantaneousTrendlineInput) {\n        super(input);\n        const prices = input.values;\n        const alpha = 2 / (input.period + 1);\n        this.result = [];\n\n        let trend: number[] = [];\n        let iTrend: number[] = [];\n\n        for (let i = 0; i < prices.length; i++) {\n            if (i < 2) {\n                trend.push(0);\n                iTrend.push(0);\n                this.result.push(0);\n                continue;\n            }\n\n            if (i === 2) {\n                trend.push((prices[i] + 2 * prices[i-1] + prices[i-2]) / 4);\n            } else {\n                trend.push(\n                    (alpha - (alpha * alpha) / 4) * prices[i] +\n                    (0.5 * alpha * alpha) * prices[i - 1] -\n                    (alpha - 0.75 * alpha * alpha) * prices[i-2] +\n                    2 * (1 - alpha) * trend[i-1] -\n                    (1 - alpha) * (1 - alpha) * trend[i-2]\n                );\n            }\n\n            if (i < 6) {\n                iTrend.push(0);\n                this.result.push(0);\n                continue;\n            }\n\n            if (i === 6) {\n                 iTrend.push(\n                    (trend[i] + 2 * trend[i - 1] + 3 * trend[i - 2] + 3 * trend[i - 3] + 2 * trend[i - 4] + trend[i - 5]) / 12\n                 );\n            } else {\n                iTrend.push(\n                     (alpha / 2) * trend[i] + (1 - alpha / 2) * iTrend[i - 1]\n                );\n            }\n            \n            this.result.push(iTrend[i]);\n        }\n    }\n\n    static calculate = (input: EhlersInstantaneousTrendlineInput): number[] => {\n        Indicator.reverseInputs(input);\n        const result = new EhlersInstantaneousTrendline(input).result;\n        if (input.reversedInput) {\n            result.reverse();\n        }\n        Indicator.reverseInputs(input);\n        return result;\n    }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,0CAA0C,oKAAA,CAAA,iBAAc;IACjE,OAAiB;IACjB,OAAe;AACnB;AAEO,MAAM,qCAAqC,oKAAA,CAAA,YAAS;IACvD,OAAiB;IAEjB,YAAY,KAAwC,CAAE;QAClD,KAAK,CAAC;QACN,MAAM,SAAS,MAAM,MAAM;QAC3B,MAAM,QAAQ,IAAI,CAAC,MAAM,MAAM,GAAG,CAAC;QACnC,IAAI,CAAC,MAAM,GAAG,EAAE;QAEhB,IAAI,QAAkB,EAAE;QACxB,IAAI,SAAmB,EAAE;QAEzB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;YACpC,IAAI,IAAI,GAAG;gBACP,MAAM,IAAI,CAAC;gBACX,OAAO,IAAI,CAAC;gBACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBACjB;YACJ;YAEA,IAAI,MAAM,GAAG;gBACT,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,MAAM,CAAC,IAAE,EAAE,GAAG,MAAM,CAAC,IAAE,EAAE,IAAI;YAC7D,OAAO;gBACH,MAAM,IAAI,CACN,CAAC,QAAQ,AAAC,QAAQ,QAAS,CAAC,IAAI,MAAM,CAAC,EAAE,GACzC,AAAC,MAAM,QAAQ,QAAS,MAAM,CAAC,IAAI,EAAE,GACrC,CAAC,QAAQ,OAAO,QAAQ,KAAK,IAAI,MAAM,CAAC,IAAE,EAAE,GAC5C,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,IAAE,EAAE,GAC5B,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,IAAE,EAAE;YAE9C;YAEA,IAAI,IAAI,GAAG;gBACP,OAAO,IAAI,CAAC;gBACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBACjB;YACJ;YAEA,IAAI,MAAM,GAAG;gBACR,OAAO,IAAI,CACR,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI;YAEhH,OAAO;gBACH,OAAO,IAAI,CACN,AAAC,QAAQ,IAAK,KAAK,CAAC,EAAE,GAAG,CAAC,IAAI,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE;YAEjE;YAEA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QAC9B;IACJ;IAEA,OAAO,YAAY,CAAC;QAChB,oKAAA,CAAA,YAAS,CAAC,aAAa,CAAC;QACxB,MAAM,SAAS,IAAI,6BAA6B,OAAO,MAAM;QAC7D,IAAI,MAAM,aAAa,EAAE;YACrB,OAAO,OAAO;QAClB;QACA,oKAAA,CAAA,YAAS,CAAC,aAAa,CAAC;QACxB,OAAO;IACX,EAAC;AACL","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/indicators.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport * as ti from 'technicalindicators';\nimport { Supertrend } from './supertrend';\nimport { FisherTransform } from './fisher';\nimport { EhlersInstantaneousTrendline } from './ehlers';\n\n\n// #region Indicator Settings Schemas\nexport const IndicatorSettings = z.object({\n  rsi: z.object({ period: z.number().int().positive().default(14), overbought: z.number().default(70), oversold: z.number().default(30) }),\n  macd: z.object({\n    fast: z.number().int().positive().default(12),\n    slow: z.number().int().positive().default(26),\n    signal: z.number().int().positive().default(9),\n  }),\n  bollingerBands: z.object({\n    period: z.number().int().positive().default(20),\n    stdDev: z.number().positive().default(2),\n  }),\n  stochastic: z.object({\n    period: z.number().int().positive().default(14),\n    slowing: z.number().int().positive().default(3),\n    overbought: z.number().default(80),\n    oversold: z.number().default(20),\n  }),\n  atr: z.object({ period: z.number().int().positive().default(14) }),\n  williamsR: z.object({ period: z.number().int().positive().default(14), overbought: z.number().default(-20), oversold: z.number().default(-80) }),\n  cci: z.object({ period: z.number().int().positive().default(20), overbought: z.number().default(100), oversold: z.number().default(-100) }),\n  roc: z.object({ period: z.number().int().positive().default(12) }),\n  mfi: z.object({ period: z.number().int().positive().default(14), overbought: z.number().default(80), oversold: z.number().default(20) }),\n  awesomeOscillator: z.object({\n    fast: z.number().int().positive().default(5),\n    slow: z.number().int().positive().default(34),\n  }),\n  ichimokuCloud: z.object({\n    tenkan: z.number().int().positive().default(9),\n    kijun: z.number().int().positive().default(26),\n    senkou: z.number().int().positive().default(52),\n    displacement: z.number().int().positive().default(26),\n  }),\n  sma: z.object({ period: z.number().int().positive().default(20) }),\n  supertrendFast: z.object({\n    atrPeriod: z.number().int().positive().default(10),\n    multiplier: z.number().positive().default(2),\n  }),\n  supertrendSlow: z.object({\n    atrPeriod: z.number().int().positive().default(20),\n    multiplier: z.number().positive().default(4),\n  }),\n  fisher: z.object({ period: z.number().int().positive().default(9) }),\n  ehlers: z.object({ period: z.number().int().positive().default(10) }),\n});\nexport type IndicatorSettings = z.infer<typeof IndicatorSettings>;\n\nexport const defaultIndicatorSettings: IndicatorSettings = IndicatorSettings.parse({});\n// #endregion\n\n// #region Result Schemas\nconst RsiResultSchema = z.object({ rsi: z.number().nullable() }).nullable();\nconst MacdResultSchema = z.object({ macd: z.number().nullable(), signal: z.number().nullable(), histogram: z.number().nullable() }).nullable();\nconst BollingerBandsResultSchema = z.object({ upper: z.number(), middle: z.number(), lower: z.number() }).nullable();\nconst StochasticResultSchema = z.object({ k: z.number().nullable(), d: z.number().nullable() }).nullable();\nconst AtrResultSchema = z.object({ atr: z.number().nullable() }).nullable();\nconst ObvResultSchema = z.object({ obv: z.number().nullable() }).nullable();\nconst WilliamsRResultSchema = z.object({ williamsR: z.number().nullable() }).nullable();\nconst CciResultSchema = z.object({ cci: z.number().nullable() }).nullable();\nconst RocResultSchema = z.object({ roc: z.number().nullable() }).nullable();\nconst MfiResultSchema = z.object({ mfi: z.number().nullable() }).nullable();\nconst AwesomeOscillatorResultSchema = z.object({ ao: z.number().nullable() }).nullable();\nconst IchimokuCloudResultSchema = z.object({ tenkanSen: z.number(), kijunSen: z.number(), senkouSpanA: z.number(), senkouSpanB: z.number() }).nullable();\nconst SmaResultSchema = z.object({ sma: z.number().nullable() }).nullable();\nconst SupertrendResultSchema = z.object({ direction: z.enum(['buy', 'sell']), supertrend: z.number() }).nullable();\nconst FisherTransformResultSchema = z.object({ fisher: z.number().nullable(), trigger: z.number().nullable() }).nullable();\nconst EhlersTrendlineResultSchema = z.object({ trendline: z.number().nullable() }).nullable();\n// #endregion\n\nexport const IndicatorDataSchema = z.object({\n    rsi: RsiResultSchema,\n    macd: MacdResultSchema,\n    bollingerBands: BollingerBandsResultSchema,\n    stochastic: StochasticResultSchema,\n    atr: AtrResultSchema,\n    obv: ObvResultSchema,\n    williamsR: WilliamsRResultSchema,\n    cci: CciResultSchema,\n    roc: RocResultSchema,\n    mfi: MfiResultSchema,\n    awesomeOscillator: AwesomeOscillatorResultSchema,\n    ichimokuCloud: IchimokuCloudResultSchema,\n    sma: SmaResultSchema,\n    supertrendFast: SupertrendResultSchema,\n    supertrendSlow: SupertrendResultSchema,\n    fisher: FisherTransformResultSchema,\n    ehlers: EhlersTrendlineResultSchema,\n});\n\nexport type IndicatorData = z.infer<typeof IndicatorDataSchema>;\n\n\nconst createIndicatorResult = <T>(result: T | undefined | null, mapping: (res: T) => any): any | null => {\n    if (result === null || result === undefined || (typeof result === 'number' && isNaN(result))) {\n        return null;\n    }\n    return mapping(result);\n};\n\n/**\n * Calculates a suite of technical indicators based on provided market data.\n * This function is designed to be robust, handling potential calculation errors\n * and insufficient data by returning null for any indicator that cannot be computed.\n *\n * @param closePrices - An array of closing prices, with the most recent price last.\n * @param highPrices - An array of high prices for the corresponding periods.\n * @param lowPrices - An array of low prices for the corresponding periods.\n * @param volumes - An array of trading volumes for the corresponding periods.\n * @param settings - An object containing the parameters for each indicator calculation.\n * @returns An `IndicatorData` object containing the latest value for each indicator.\n */\nexport function calculateIndicators(\n  closePrices: number[],\n  highPrices: number[],\n  lowPrices: number[],\n  volumes: number[],\n  settings: IndicatorSettings = defaultIndicatorSettings\n): IndicatorData | null {\n    if (closePrices.length === 0) {\n        return null;\n    }\n\n    const input = {\n        high: highPrices,\n        low: lowPrices,\n        close: closePrices,\n        volume: volumes,\n        period: 0, // Placeholder, will be overridden by specific settings\n    };\n    \n    const safeLast = <T>(arr: T[] | undefined): T | null => arr && arr.length > 0 ? arr[arr.length - 1] : null;\n\n    // RSI\n    const rsi = createIndicatorResult(safeLast(ti.RSI.calculate({ values: closePrices, period: settings.rsi.period })), (res) => ({ rsi: res }));\n\n    // MACD\n    const macd = createIndicatorResult(safeLast(ti.MACD.calculate({ \n        values: closePrices,\n        fastPeriod: settings.macd.fast,\n        slowPeriod: settings.macd.slow,\n        signalPeriod: settings.macd.signal,\n        SimpleMAOscillator: false,\n        SimpleMASignal: false\n    })), (res) => ({ macd: res.MACD, signal: res.signal, histogram: res.histogram }));\n\n    // Bollinger Bands\n    const bollingerBands = createIndicatorResult(safeLast(ti.BollingerBands.calculate({ values: closePrices, period: settings.bollingerBands.period, stdDev: settings.bollingerBands.stdDev })), (res) => res);\n\n    // Stochastic\n    const stochastic = createIndicatorResult(safeLast(ti.Stochastic.calculate({ ...input, period: settings.stochastic.period, signalPeriod: settings.stochastic.slowing })), (res) => res);\n\n    // ATR\n    const atr = createIndicatorResult(safeLast(ti.ATR.calculate({ ...input, period: settings.atr.period })), (res) => ({ atr: res }));\n\n    // OBV (On-Balance Volume)\n    const obv = createIndicatorResult(safeLast(ti.OBV.calculate(input)), (res) => ({ obv: res }));\n\n    // Williams %R\n    const williamsR = createIndicatorResult(safeLast(ti.WilliamsR.calculate({ ...input, period: settings.williamsR.period })), (res) => ({ williamsR: res }));\n\n    // CCI\n    const cci = createIndicatorResult(safeLast(ti.CCI.calculate({ ...input, period: settings.cci.period })), (res) => ({ cci: res }));\n    \n    // ROC\n    const roc = createIndicatorResult(safeLast(ti.ROC.calculate({ values: closePrices, period: settings.roc.period })), (res) => ({ roc: res }));\n\n    // MFI\n    const mfi = createIndicatorResult(safeLast(ti.MFI.calculate({ ...input, period: settings.mfi.period })), (res) => ({ mfi: res }));\n\n    // Awesome Oscillator\n    const awesomeOscillator = createIndicatorResult(safeLast(ti.AwesomeOscillator.calculate({ ...input, fastPeriod: settings.awesomeOscillator.fast, slowPeriod: settings.awesomeOscillator.slow, format: (a) => a })), (res) => ({ ao: res }));\n\n    // Ichimoku Cloud\n    const ichimokuCloud = createIndicatorResult(safeLast(ti.IchimokuCloud.calculate({ \n        high: highPrices,\n        low: lowPrices,\n        conversionPeriod: settings.ichimokuCloud.tenkan,\n        basePeriod: settings.ichimokuCloud.kijun,\n        spanPeriod: settings.ichimokuCloud.senkou,\n        displacement: settings.ichimokuCloud.displacement\n    })), (res) => ({ tenkanSen: res.conversion, kijunSen: res.base, senkouSpanA: res.spanA, senkouSpanB: res.spanB }));\n\n    // SMA\n    const sma = createIndicatorResult(safeLast(ti.SMA.calculate({ values: closePrices, period: settings.sma.period })), (res) => ({ sma: res }));\n    \n    // Supertrend\n    const supertrendFast = createIndicatorResult(safeLast(Supertrend.calculate({ ...input, period: settings.supertrendFast.atrPeriod, multiplier: settings.supertrendFast.multiplier })), (res) => ({ direction: res.direction > 0 ? 'buy' : 'sell', supertrend: res.value }));\n    const supertrendSlow = createIndicatorResult(safeLast(Supertrend.calculate({ ...input, period: settings.supertrendSlow.atrPeriod, multiplier: settings.supertrendSlow.multiplier })), (res) => ({ direction: res.direction > 0 ? 'buy' : 'sell', supertrend: res.value }));\n\n    // Fisher Transform\n    const fisher = createIndicatorResult(safeLast(FisherTransform.calculate({ ...input, period: settings.fisher.period })), (res) => res);\n\n    // Ehlers Instantaneous Trendline\n    const ehlers = createIndicatorResult(safeLast(EhlersInstantaneousTrendline.calculate({ values: closePrices, period: settings.ehlers.period })), (res) => ({ trendline: res }));\n\n    return {\n        rsi,\n        macd,\n        bollingerBands,\n        stochastic,\n        atr,\n        obv,\n        williamsR,\n        cci,\n        roc,\n        mfi,\n        awesomeOscillator,\n        ichimokuCloud,\n        sma,\n        supertrendFast,\n        supertrendSlow,\n        fisher,\n        ehlers,\n    };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 801, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n  enableDevUI: true,\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;IACP,aAAa;AACf","debugId":null}},
    {"offset": {"line": 823, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/cache.ts"],"sourcesContent":["\nconst cache = new Map<string, { value: any; expiry: number }>();\n\nexport function withCache<T extends (...args: any[]) => any>(\n  fn: T,\n  options: { ttl: number; getKey?: (...args: Parameters<T>) => string } = { ttl: 60 * 1000 }\n): (...args: Parameters<T>) => Promise<ReturnType<T>> {\n  return async function (...args: Parameters<T>): Promise<ReturnType<T>> {\n    const key = options.getKey ? options.getKey(...args) : JSON.stringify({ name: fn.name, args });\n    const now = Date.now();\n\n    const cached = cache.get(key);\n    if (cached && now < cached.expiry) {\n      return cached.value;\n    }\n\n    const result = await fn(...args);\n    cache.set(key, { value: result, expiry: now + options.ttl });\n\n    return result;\n  };\n}\n"],"names":[],"mappings":";;;AACA,MAAM,QAAQ,IAAI;AAEX,SAAS,UACd,EAAK,EACL,UAAwE;IAAE,KAAK,KAAK;AAAK,CAAC;IAE1F,OAAO,eAAgB,GAAG,IAAmB;QAC3C,MAAM,MAAM,QAAQ,MAAM,GAAG,QAAQ,MAAM,IAAI,QAAQ,KAAK,SAAS,CAAC;YAAE,MAAM,GAAG,IAAI;YAAE;QAAK;QAC5F,MAAM,MAAM,KAAK,GAAG;QAEpB,MAAM,SAAS,MAAM,GAAG,CAAC;QACzB,IAAI,UAAU,MAAM,OAAO,MAAM,EAAE;YACjC,OAAO,OAAO,KAAK;QACrB;QAEA,MAAM,SAAS,MAAM,MAAM;QAC3B,MAAM,GAAG,CAAC,KAAK;YAAE,OAAO;YAAQ,QAAQ,MAAM,QAAQ,GAAG;QAAC;QAE1D,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 854, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/bybit-api.ts"],"sourcesContent":["\nimport { z } from 'zod';\nimport { withCache } from './cache';\n\n// #region Zod Schemas and Types\n/**\n * Zod schema for Bybit ticker information.\n */\nexport const TickerInfoSchema = z.object({\n  lastPrice: z.string(),\n  highPrice24h: z.string(),\n  lowPrice24h: z.string(),\n  turnover24h: z.string(), // Volume in quote currency (USDT)\n  volume24h: z.string(), // Volume in base currency (e.g., BTC)\n  price24hPcnt: z.string(), // 24h price change percentage\n});\nexport type TickerInfo = z.infer<typeof TickerInfoSchema>;\n\n/**\n * Zod schema for a single entry in the order book (a price and size pair).\n */\nexport const OrderBookEntrySchema = z.tuple([z.string(), z.string()]); // [price, size]\nexport type OrderBookEntry = z.infer<typeof OrderBookEntrySchema>;\n\n/**\n * Zod schema for the entire order book.\n */\nexport const OrderBookSchema = z.object({\n  bids: z.array(OrderBookEntrySchema),\n  asks: z.array(OrderBookEntrySchema),\n  ts: z.string(), // Orderbook timestamp\n});\nexport type OrderBook = z.infer<typeof OrderBookSchema>;\n\n/**\n * Zod schema for a single recent trade.\n */\nexport const RecentTradeSchema = z.object({\n  execId: z.string(),\n  execTime: z.union([z.string(), z.number()]),\n  price: z.string(),\n  qty: z.string(),\n  side: z.enum(['Buy', 'Sell']),\n  isBlockTrade: z.boolean().optional(), // Whether it's a block trade\n});\nexport type RecentTrade = z.infer<typeof RecentTradeSchema>;\n\n/**\n * Zod schema for a single Kline (candlestick) entry.\n */\nexport const KlineEntrySchema = z.tuple([\n  z.string(), // Start time\n  z.string(), // Open\n  z.string(), // High\n  z.string(), // Low\n  z.string(), // Close\n  z.string(), // Volume\n  z.string(), // Turnover\n  z.string().optional() // Optional: Confirm flag (1 if the kline is closed)\n]);\nexport type KlineEntry = z.infer<typeof KlineEntrySchema>;\n\n// #endregion\n\n// #region Constants\nconst BYBIT_API_URL = 'https://api.bybit.com';\nexport const BYBIT_WEBSOCKET_URL = 'wss://stream.bybit.com/v5/public/spot';\nexport const DEFAULT_REQUEST_TIMEOUT = 10000; // 10 seconds\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY_MS = 1000;\n// #endregion\n\n/**\n * The standard response structure from the Bybit API.\n */\ninterface ApiResponse<T> {\n  retCode: number;\n  retMsg: string;\n  result: T;\n  time: number;\n}\n\n/**\n * An enhanced fetch function for interacting with the Bybit API.\n * Includes retry logic, request timeout, and standardized error handling.\n *\n * @param endpoint - The API endpoint path (e.g., '/v5/market/tickers').\n * @param params - A record of query parameters to include in the request.\n * @param options - Standard RequestInit options to pass to fetch.\n * @returns A promise that resolves to the 'result' field of the API response, or null if an error occurs.\n */\nasync function fetchFromBybit<T>(\n  endpoint: string, \n  params: Record<string, string> = {}, \n  options: RequestInit = {}\n): Promise<T | null> {\n  const url = new URL(endpoint, BYBIT_API_URL);\n  url.search = new URLSearchParams(params).toString();\n  \n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), DEFAULT_REQUEST_TIMEOUT);\n  \n  const fetchOptions: RequestInit = {\n    cache: 'no-store',\n    signal: options.signal || controller.signal, // Use provided signal or internal timeout signal\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    ...options\n  };\n\n  let retryCount = 0;\n  \n  while (retryCount <= MAX_RETRIES) {\n    try {\n      const response = await fetch(url.toString(), fetchOptions);\n      clearTimeout(timeoutId); // Clear timeout once response is received\n      \n      if (!response.ok) {\n        throw new Error(`Bybit API error: ${response.status} ${response.statusText}`);\n      }\n      \n      const data: ApiResponse<T> = await response.json();\n      \n      if (data.retCode !== 0) {\n        throw new Error(`Bybit API error: ${data.retMsg} (Code: ${data.retCode})`);\n      }\n      \n      return data.result;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      \n      // Don't retry on abort errors or if we've reached max retries\n      if (error instanceof Error && error.name === 'AbortError') {\n        console.error(`Request to ${endpoint} timed out or was aborted`);\n        return null;\n      }\n      \n      if (retryCount === MAX_RETRIES) {\n        console.error(`Failed to fetch from Bybit endpoint ${endpoint} after ${MAX_RETRIES} retries:`, error);\n        return null;\n      }\n      \n      // Exponential backoff\n      const delay = RETRY_DELAY_MS * Math.pow(2, retryCount);\n      console.warn(`Retry ${retryCount + 1}/${MAX_RETRIES} for ${endpoint} in ${delay}ms`);\n      \n      await new Promise(resolve => setTimeout(resolve, delay));\n      retryCount++;\n    }\n  }\n  \n  return null;\n}\n\n/**\n * Fetches ticker information for a specific symbol.\n *\n * @param symbol - The trading symbol (e.g., 'BTCUSDT').\n * @returns A promise resolving to a validated TickerInfo object or null.\n */\nasync function getTickerFn(symbol: string): Promise<TickerInfo | null> {\n  try {\n    const result = await fetchFromBybit<any>('/v5/market/tickers', { \n      category: 'spot', \n      symbol \n    });\n    \n    if (!result || !result.list || result.list.length === 0) {\n      console.warn(`No ticker data found for symbol: ${symbol}`);\n      return null;\n    }\n    \n    // Extract and validate the ticker data\n    const ticker = result.list[0];\n    const validation = TickerInfoSchema.safeParse(ticker);\n\n    if(!validation.success) {\n        console.warn(`Invalid ticker data received for ${symbol}:`, validation.error);\n        return null;\n    }\n    \n    return validation.data;\n\n  } catch (error) {\n    console.error(`Error fetching ticker for ${symbol}:`, error);\n    return null;\n  }\n}\n\n/**\n * Fetches the order book for a specific symbol.\n *\n * @param symbol - The trading symbol.\n * @param limit - The number of price levels to fetch (depth).\n * @returns A promise resolving to a validated OrderBook object or null.\n */\nasync function getOrderBookFn(symbol: string, limit: number = 20): Promise<OrderBook | null> {\n  try {\n    const result = await fetchFromBybit<any>('/v5/market/orderbook', { \n      category: 'spot', \n      symbol, \n      limit: limit.toString() \n    });\n    \n    if (!result) {\n      console.warn(`No orderbook data found for symbol: ${symbol}`);\n      return null;\n    }\n    \n    const validation = OrderBookSchema.safeParse({\n        bids: result.b,\n        asks: result.a,\n        ts: result.ts?.toString() || Date.now().toString()\n    });\n\n    if(!validation.success) {\n        console.warn(`Invalid orderbook data for ${symbol}:`, validation.error);\n        return null;\n    }\n    \n    return validation.data;\n\n  } catch (error) {\n    console.error(`Error fetching orderbook for ${symbol}:`, error);\n    return null;\n  }\n}\n\n/**\n * Fetches the most recent public trades for a symbol.\n *\n * @param symbol - The trading symbol.\n * @param limit - The maximum number of trades to fetch.\n * @param options - Standard RequestInit options to pass to fetch.\n * @returns A promise resolving to an array of validated RecentTrade objects.\n */\nasync function getRecentTradesFn(\n  symbol: string, \n  limit: number = 30, \n  options: RequestInit = {}\n): Promise<RecentTrade[]> {\n  try {\n    const result = await fetchFromBybit<any>(\n      '/v5/market/recent-trade', \n      { \n        category: 'spot', \n        symbol, \n        limit: limit.toString() \n      }, \n      options\n    );\n    \n    if (!result || !result.list || !Array.isArray(result.list)) {\n      return [];\n    }\n    \n    // Filter and validate trade data\n    const validatedTrades: RecentTrade[] = [];\n    for(const trade of result.list) {\n        const mappedTrade = {\n            execId: trade.i,\n            execTime: trade.T,\n            price: trade.p,\n            qty: trade.v,\n            side: trade.S,\n            isBlockTrade: trade.m,\n        };\n        const validation = RecentTradeSchema.safeParse(mappedTrade);\n        if(validation.success) {\n            validatedTrades.push(validation.data);\n        }\n    }\n    return validatedTrades;\n\n  } catch (error) {\n    if (!(error instanceof Error && error.name === 'AbortError')) {\n      console.error(`Error fetching recent trades for ${symbol}:`, error);\n    }\n    return [];\n  }\n}\n\n/**\n * Fetches Kline (candlestick) data for a symbol and interval.\n *\n * @param symbol - The trading symbol.\n * @param interval - The user-friendly interval string (e.g., '1h', '1d').\n * @param limit - The number of candlesticks to fetch.\n * @returns A promise resolving to an array of validated KlineEntry tuples or null.\n */\nasync function getKlineFn(\n  symbol: string, \n  interval: string, \n  limit: number = 100\n): Promise<KlineEntry[] | null> {\n  try {\n    // Map user-friendly intervals to Bybit's required format\n    const intervalMap: Record<string, string> = {\n      '1m': '1',\n      '5m': '5',\n      '15m': '15',\n      '30m': '30',\n      '1h': '60',\n      '2h': '120',\n      '4h': '240',\n      '6h': '360',\n      '12h': '720',\n      '1d': 'D',\n      '1w': 'W',\n      '1M': 'M',\n    };\n    \n    const bybitInterval = intervalMap[interval] || interval;\n    \n    const result = await fetchFromBybit<any>('/v5/market/kline', { \n      category: 'spot', \n      symbol, \n      interval: bybitInterval, \n      limit: limit.toString() \n    });\n    \n    if (!result || !result.list || !Array.isArray(result.list)) {\n      console.warn(`No kline data found for symbol: ${symbol} with interval: ${interval}`);\n      return null;\n    }\n    \n    const validation = z.array(KlineEntrySchema).safeParse(result.list);\n    if (!validation.success) {\n        console.warn(`Invalid kline data for ${symbol} with interval ${interval}:`, validation.error);\n        return null;\n    }\n\n    return validation.data;\n\n  } catch (error) {\n    console.error(`Error fetching kline data for ${symbol} with interval ${interval}:`, error);\n    return null;\n  }\n}\n\n/**\n * Fetches ticker information for multiple symbols concurrently.\n *\n * @param symbols - An array of trading symbols.\n * @returns A promise resolving to a record mapping each symbol to its TickerInfo.\n */\nasync function getTickersFn(symbols: string[]): Promise<Record<string, TickerInfo>> {\n  const results: Record<string, TickerInfo> = {};\n  \n  // Use Promise.allSettled to handle partial failures gracefully\n  const promises = symbols.map(async (symbol) => {\n    const ticker = await getTicker(symbol);\n    return { symbol, ticker };\n  });\n  \n  const settledResults = await Promise.allSettled(promises);\n  \n  settledResults.forEach((result) => {\n    if (result.status === 'fulfilled' && result.value.ticker) {\n      const { symbol, ticker } = result.value;\n      results[symbol] = ticker;\n    }\n  });\n  \n  return results;\n}\n\n// #region Cached Functions\n\nexport const getTicker = withCache(getTickerFn, { ttl: 1000 * 10 }); // 10 seconds\nexport const getOrderBook = withCache(getOrderBookFn, { ttl: 1000 * 10 }); // 10 seconds\nexport const getRecentTrades = withCache(getRecentTradesFn, { ttl: 1000 * 10 }); // 10 seconds\nexport const getKline = withCache(getKlineFn, { ttl: 1000 * 60 }); // 1 minute\nexport const getTickers = withCache(getTickersFn, { ttl: 1000 * 10 }); // 10 seconds\n\n// #endregion\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1167, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-trading-signal.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent that generates trading signals and market analysis.\n *\n * - generateTradingSignal - A function that generates trading signals and market analysis.\n * - GenerateTradingSignalInput - The input type for the generateTradingSignal function.\n * - GenerateTradingSignalOutput - The return type for the generateTradingSignal function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\nimport { getKlineData as fetchKlineData, getOrderBookData as fetchOrderBookData, getIndicatorData as fetchIndicatorData, getMarketData as fetchMarketData, analyzeOrderBook as anlyzeOrderBookUtil } from '@/lib/actions';\nimport { getRecentTrades as fetchRecentTradesData, KlineEntrySchema, OrderBookSchema, RecentTradeSchema, TickerInfoSchema, type OrderBook, type TickerInfo, type KlineEntry } from '@/lib/bybit-api';\nimport { IndicatorSettings, IndicatorDataSchema } from '@/lib/indicators';\n\n\nconst GenerateTradingSignalInputSchema = z.object({\n  symbol: z.string().describe('The trading symbol (e.g., BTCUSDT).'),\n  timeframe: z.string().describe('The timeframe for the chart and data (e.g., 1m, 5m, 1h, 1d).'),\n  indicatorSettings: IndicatorSettings.optional().describe('The settings for the technical indicators.'),\n});\nexport type GenerateTradingSignalInput = z.infer<typeof GenerateTradingSignalInputSchema>;\n\nconst GenerateTradingSignalOutputSchema = z.object({\n  currentPrice: z.number().describe('The current price of the asset.'),\n  entryPrice: z.number().describe('The recommended entry price for the trade.'),\n  takeProfit: z.number().describe('The recommended take-profit price level.'),\n  stopLoss: z.number().describe('The recommended stop-loss price level.'),\n  signal: z.enum(['Buy', 'Sell', 'Hold']).describe('The trading signal: Buy, Sell, or Hold.'),\n  reasoning: z.string().describe('Detailed reasoning for the generated signal, based on market analysis.'),\n  confidenceLevel: z.enum(['High', 'Medium', 'Low']).describe('The confidence level of the signal.'),\n});\nexport type GenerateTradingSignalOutput = z.infer<typeof GenerateTradingSignalOutputSchema>;\n\n// Tool Definitions\nconst getKlineData = ai.defineTool({ name: 'getKlineData', description: 'Get candlestick (Kline) data.', inputSchema: z.object({ symbol: z.string(), timeframe: z.string() }), outputSchema: z.array(KlineEntrySchema).nullable() }, fetchKlineData);\nconst getOrderBookData = ai.defineTool({ name: 'getOrderBookData', description: 'Get order book data.', inputSchema: z.object({ symbol: z.string() }), outputSchema: OrderBookSchema.nullable() }, fetchOrderBookData);\nconst getRecentTradesData = ai.defineTool({ name: 'getRecentTradesData', description: 'Get recent public trades.', inputSchema: z.object({ symbol: z.string() }), outputSchema: z.array(RecentTradeSchema) }, fetchRecentTradesData);\nconst getIndicatorData = ai.defineTool({ name: 'getIndicatorData', description: 'Get technical indicator data.', inputSchema: z.object({ symbol: z.string(), timeframe: z.string(), settings: IndicatorSettings.optional() }), outputSchema: IndicatorDataSchema.nullable() }, fetchIndicatorData);\nconst getMarketData = ai.defineTool({ name: 'getMarketData', description: 'Get the latest market ticker data.', inputSchema: z.object({ symbol: z.string() }), outputSchema: TickerInfoSchema.nullable() }, fetchMarketData);\nconst analyzeOrderBook = ai.defineTool({ name: 'analyzeOrderBook', description: 'Analyze order book to find support/resistance.', inputSchema: OrderBookSchema, outputSchema: z.object({ support: z.array(z.number()), resistance: z.array(z.number()) }) }, anlyzeOrderBookUtil);\n\nexport async function generateTradingSignal(input: z.infer<typeof GenerateTradingSignalInputSchema>): Promise<z.infer<typeof GenerateTradingSignalOutputSchema>> {\n  return generateTradingSignalFlow(input);\n}\n\nconst tradingSignalPrompt = ai.definePrompt({\n  name: 'tradingSignalPrompt',\n  output: { format: 'json', schema: GenerateTradingSignalOutputSchema },\n  tools: [getKlineData, getOrderBookData, getRecentTradesData, getIndicatorData, getMarketData, analyzeOrderBook],\n  system: `You are an expert financial analyst AI. Your goal is to generate a trading signal based on a comprehensive analysis of market data.\n\n  **Process:**\n  1.  **Get Current Price:** Start by calling \\`getMarketData\\` to get the current price. This is essential. If it fails, you cannot proceed.\n  2.  **Gather Data:** Call all other available data tools (\\`getKlineData\\`, \\`getOrderBookData\\`, \\`getRecentTradesData\\`, \\`getIndicatorData\\`) to build a complete picture of the market.\n  3.  **Analyze Order Book:** If \\`getOrderBookData\\` was successful, immediately pass its output to \\`analyzeOrderBook\\` to identify key support and resistance levels.\n  4.  **Synthesize Findings:** Review all the data you have gathered. Look for confirmations or divergences between different data sources (e.g., does the RSI confirm the price action? Does the order book support a potential breakout?).\n  5.  **Formulate Reasoning:** Construct a detailed, step-by-step \\`reasoning\\` for your final decision. Reference specific data points (e.g., \"RSI is 78, indicating overbought conditions,\" \"Strong resistance identified at $52,000 by order book analysis\"). If a tool failed, you MUST mention it in your reasoning (e.g., \"Could not retrieve indicator data, so confidence is lowered.\").\n  6.  **Generate Signal:** Based on your reasoning, determine the \\`signal\\` (Buy, Sell, or Hold), \\`entryPrice\\`, \\`takeProfit\\`, and \\`stopLoss\\`.\n  7.  **Set Confidence:** Determine the \\`confidenceLevel\\` based on how much data you could retrieve and how strongly it points to a particular outcome.\n\n  Your final output must be a valid JSON object matching the provided schema.`,\n});\n\nconst generateTradingSignalFlow = ai.defineFlow({ name: 'generateTradingSignalFlow', inputSchema: GenerateTradingSignalInputSchema, outputSchema: GenerateTradingSignalOutputSchema }, async (input) => {\n    const response = await tradingSignalPrompt({ prompt: `Generate a trading signal for ${input.symbol} on the ${input.timeframe} timeframe. Indicator settings: ${JSON.stringify(input.indicatorSettings || {})}` });\n    \n    if (!response.output) {\n      throw new Error(\"AI failed to produce a valid response.\");\n    }\n    const output = response.output;\n\n    // Final validation\n    if (output.currentPrice === null || isNaN(output.currentPrice) || output.currentPrice <= 0) {\n        throw new Error(\"AI failed to generate a valid signal with a positive current price.\");\n    }\n    \n    const requiredNumericFields: (keyof z.infer<typeof GenerateTradingSignalOutputSchema>)[] = ['entryPrice', 'takeProfit', 'stopLoss'];\n    for(const field of requiredNumericFields) {\n        if(output[field] === null || isNaN(output[field] as number) || (output[field] as number) <= 0) {\n            throw new Error(`AI generated an invalid or non-positive value for '${field}'.`);\n        }\n    }\n    \n    return output;\n});\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;AAGA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,mBAAmB,wHAAA,CAAA,oBAAiB,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC3D;AAGA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,QAAQ,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAO;QAAQ;KAAO,EAAE,QAAQ,CAAC;IACjD,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,iBAAiB,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAM,EAAE,QAAQ,CAAC;AAC9D;AAGA,mBAAmB;AACnB,MAAM,eAAe,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAAE,MAAM;IAAgB,aAAa;IAAiC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;QAAI,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM;IAAG;IAAI,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,0HAAA,CAAA,mBAAgB,EAAE,QAAQ;AAAG,GAAG,qHAAA,CAAA,eAAc;AACnP,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAAE,MAAM;IAAoB,aAAa;IAAwB,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAAG;IAAI,cAAc,0HAAA,CAAA,kBAAe,CAAC,QAAQ;AAAG,GAAG,qHAAA,CAAA,mBAAkB;AACrN,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAAE,MAAM;IAAuB,aAAa;IAA6B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAAG;IAAI,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,0HAAA,CAAA,oBAAiB;AAAE,GAAG,0HAAA,CAAA,kBAAqB;AACnO,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAAE,MAAM;IAAoB,aAAa;IAAiC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;QAAI,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM;QAAI,UAAU,wHAAA,CAAA,oBAAiB,CAAC,QAAQ;IAAG;IAAI,cAAc,wHAAA,CAAA,sBAAmB,CAAC,QAAQ;AAAG,GAAG,qHAAA,CAAA,mBAAkB;AACjS,MAAM,gBAAgB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAAE,MAAM;IAAiB,aAAa;IAAsC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAAG;IAAI,cAAc,0HAAA,CAAA,mBAAgB,CAAC,QAAQ;AAAG,GAAG,qHAAA,CAAA,gBAAe;AAC3N,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAAE,MAAM;IAAoB,aAAa;IAAkD,aAAa,0HAAA,CAAA,kBAAe;IAAE,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,SAAS,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM;QAAK,YAAY,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM;IAAI;AAAG,GAAG,qHAAA,CAAA,mBAAmB;AAEzQ,eAAe,sBAAsB,KAAuD;IACjG,OAAO,0BAA0B;AACnC;AAEA,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC1C,MAAM;IACN,QAAQ;QAAE,QAAQ;QAAQ,QAAQ;IAAkC;IACpE,OAAO;QAAC;QAAc;QAAkB;QAAqB;QAAkB;QAAe;KAAiB;IAC/G,QAAQ,CAAC;;;;;;;;;;;6EAWkE,CAAC;AAC9E;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAAE,MAAM;IAA6B,aAAa;IAAkC,cAAc;AAAkC,GAAG,OAAO;IAC1L,MAAM,WAAW,MAAM,oBAAoB;QAAE,QAAQ,CAAC,8BAA8B,EAAE,MAAM,MAAM,CAAC,QAAQ,EAAE,MAAM,SAAS,CAAC,gCAAgC,EAAE,KAAK,SAAS,CAAC,MAAM,iBAAiB,IAAI,CAAC,IAAI;IAAC;IAE/M,IAAI,CAAC,SAAS,MAAM,EAAE;QACpB,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,SAAS,SAAS,MAAM;IAE9B,mBAAmB;IACnB,IAAI,OAAO,YAAY,KAAK,QAAQ,MAAM,OAAO,YAAY,KAAK,OAAO,YAAY,IAAI,GAAG;QACxF,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,wBAAqF;QAAC;QAAc;QAAc;KAAW;IACnI,KAAI,MAAM,SAAS,sBAAuB;QACtC,IAAG,MAAM,CAAC,MAAM,KAAK,QAAQ,MAAM,MAAM,CAAC,MAAM,KAAe,AAAC,MAAM,CAAC,MAAM,IAAe,GAAG;YAC3F,MAAM,IAAI,MAAM,CAAC,mDAAmD,EAAE,MAAM,EAAE,CAAC;QACnF;IACJ;IAEA,OAAO;AACX;;;IA3CsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 1336, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { generateTradingSignal, type GenerateTradingSignalOutput } from '@/ai/flows/generate-trading-signal';\nimport { getTicker, getOrderBook, getKline, type OrderBook, type TickerInfo, type KlineEntry } from '@/lib/bybit-api';\nimport { calculateIndicators, type IndicatorData, type IndicatorSettings, defaultIndicatorSettings } from '@/lib/indicators';\n\n/**\n * The response shape for the AI trading signal analysis.\n */\nexport type AiSignalResponse = GenerateTradingSignalOutput;\n\n/**\n * Server action to generate an AI-powered trading signal.\n * This function calls the Genkit flow and handles its response or errors.\n *\n * @param symbol - The trading symbol (e.g., 'BTCUSDT').\n * @param timeframe - The chart timeframe (e.g., '1h').\n * @param indicatorSettings - Optional custom settings for technical indicators.\n * @returns An object containing the success status, the analysis, and an optional error message.\n */\nexport async function getAiTradingSignal(symbol: string, timeframe: string, indicatorSettings?: IndicatorSettings): Promise<{ success: boolean, analysis?: AiSignalResponse, error?: string }> {\n  try {\n    const result = await generateTradingSignal({ symbol, timeframe, indicatorSettings });\n    return { success: true, analysis: result };\n  } catch (error) {\n    console.error('Error generating AI trading signal:', error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return { success: false, error: errorMessage };\n  }\n}\n\n/**\n * Server action to get the latest market data (ticker info) for a symbol.\n *\n * @param symbol - The trading symbol.\n * @returns A promise that resolves to the TickerInfo object or null.\n */\nexport async function getMarketData(symbol: string): Promise<TickerInfo | null> {\n    return getTicker(symbol);\n}\n\n/**\n * Server action to get the order book for a symbol.\n *\n * @param symbol - The trading symbol.\n * @returns A promise that resolves to the OrderBook object or null.\n */\nexport async function getOrderBookData(symbol: string): Promise<OrderBook | null> {\n    return getOrderBook(symbol);\n}\n\n/**\n * Server action to get Kline (candlestick) data.\n *\n * @param symbol - The trading symbol.\n * @param interval - The timeframe interval (e.g., '1h', '4h').\n * @returns A promise that resolves to an array of Kline entries or null.\n */\nexport async function getKlineData(symbol: string, interval: string): Promise<KlineEntry[] | null> {\n    return getKline(symbol, interval);\n}\n\n/**\n * Server action to calculate a suite of technical indicators for a symbol and timeframe.\n *\n * @param symbol - The trading symbol.\n * @param timeframe - The chart timeframe.\n * @param settings - Optional custom indicator settings.\n * @returns A promise that resolves to the calculated IndicatorData object or null.\n */\nexport async function getIndicatorData(symbol: string, timeframe: string, settings: IndicatorSettings = defaultIndicatorSettings): Promise<IndicatorData | null> {\n    const klineData = await getKline(symbol, timeframe);\n    if (!klineData) return null;\n    const reversedKline = [...klineData].reverse();\n    const closePrices = reversedKline.map(k => parseFloat(k[4]));\n    const highPrices = reversedKline.map(k => parseFloat(k[2]));\n    const lowPrices = reversedKline.map(k => parseFloat(k[3]));\n    const volumes = reversedKline.map(k => parseFloat(k[5]));\n    return calculateIndicators(closePrices, highPrices, lowPrices, volumes, settings);\n}\n\n/**\n * Server action to analyze an order book and identify major support and resistance levels.\n *\n * @param orderBook - The OrderBook object to analyze.\n * @returns A promise resolving to an object with arrays of support and resistance price levels.\n */\nexport async function analyzeOrderBook(orderBook: OrderBook): Promise<{ support: number[]; resistance: number[] }> {\n  const bids = orderBook.bids.map(([price, size]) => ({ price: parseFloat(price), size: parseFloat(size) }));\n  const asks = orderBook.asks.map(([price, size]) => ({ price: parseFloat(price), size: parseFloat(size) }));\n\n  // Helper function to find the levels with the largest order sizes\n  const findLevels = (orders: { price: number; size: number }[], count: number) => {\n    const sorted = [...orders].sort((a, b) => b.size - a.size);\n    return sorted.slice(0, count).map(o => o.price);\n  };\n  \n  const supportLevels = findLevels(bids, 3);\n  const resistanceLevels = findLevels(asks, 3);\n\n  return {\n    support: supportLevels,\n    resistance: resistanceLevels,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;;;;;;;AAgBO,eAAe,mBAAmB,MAAc,EAAE,SAAiB,EAAE,iBAAqC;IAC/G,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,mJAAA,CAAA,wBAAqB,AAAD,EAAE;YAAE;YAAQ;YAAW;QAAkB;QAClF,OAAO;YAAE,SAAS;YAAM,UAAU;QAAO;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uCAAuC;QACrD,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO;YAAE,SAAS;YAAO,OAAO;QAAa;IAC/C;AACF;AAQO,eAAe,cAAc,MAAc;IAC9C,OAAO,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD,EAAE;AACrB;AAQO,eAAe,iBAAiB,MAAc;IACjD,OAAO,CAAA,GAAA,0HAAA,CAAA,eAAY,AAAD,EAAE;AACxB;AASO,eAAe,aAAa,MAAc,EAAE,QAAgB;IAC/D,OAAO,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ;AAC5B;AAUO,eAAe,iBAAiB,MAAc,EAAE,SAAiB,EAAE,WAA8B,wHAAA,CAAA,2BAAwB;IAC5H,MAAM,YAAY,MAAM,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ;IACzC,IAAI,CAAC,WAAW,OAAO;IACvB,MAAM,gBAAgB;WAAI;KAAU,CAAC,OAAO;IAC5C,MAAM,cAAc,cAAc,GAAG,CAAC,CAAA,IAAK,WAAW,CAAC,CAAC,EAAE;IAC1D,MAAM,aAAa,cAAc,GAAG,CAAC,CAAA,IAAK,WAAW,CAAC,CAAC,EAAE;IACzD,MAAM,YAAY,cAAc,GAAG,CAAC,CAAA,IAAK,WAAW,CAAC,CAAC,EAAE;IACxD,MAAM,UAAU,cAAc,GAAG,CAAC,CAAA,IAAK,WAAW,CAAC,CAAC,EAAE;IACtD,OAAO,CAAA,GAAA,wHAAA,CAAA,sBAAmB,AAAD,EAAE,aAAa,YAAY,WAAW,SAAS;AAC5E;AAQO,eAAe,iBAAiB,SAAoB;IACzD,MAAM,OAAO,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,KAAK,GAAK,CAAC;YAAE,OAAO,WAAW;YAAQ,MAAM,WAAW;QAAM,CAAC;IACxG,MAAM,OAAO,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,KAAK,GAAK,CAAC;YAAE,OAAO,WAAW;YAAQ,MAAM,WAAW;QAAM,CAAC;IAExG,kEAAkE;IAClE,MAAM,aAAa,CAAC,QAA2C;QAC7D,MAAM,SAAS;eAAI;SAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,GAAG,EAAE,IAAI;QACzD,OAAO,OAAO,KAAK,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,IAAK,EAAE,KAAK;IAChD;IAEA,MAAM,gBAAgB,WAAW,MAAM;IACvC,MAAM,mBAAmB,WAAW,MAAM;IAE1C,OAAO;QACL,SAAS;QACT,YAAY;IACd;AACF;;;IApFsB;IAiBA;IAUA;IAWA;IAYA;IAiBA;;AAnEA,+OAAA;AAiBA,+OAAA;AAUA,+OAAA;AAWA,+OAAA;AAYA,+OAAA;AAiBA,+OAAA","debugId":null}},
    {"offset": {"line": 1440, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {defaultIndicatorSettings as '7f2e70fe065ef52da281045a61720821ecf0d71418'} from 'ACTIONS_MODULE0'\nexport {getAiTradingSignal as '70c6125dbbad3595350503c517b30b35b439281e36'} from 'ACTIONS_MODULE1'\nexport {getIndicatorData as '70901addb4aa828fa13a5df1151b80af96986e9baf'} from 'ACTIONS_MODULE1'\nexport {IndicatorSettings as '7f6bdcfaab54ceca1993e9b1f5ad75ae8ef8b01100'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 1504, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 1518, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 1532, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}