{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n  enableDevUI: true,\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;IACP,aAAa;AACf","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/cache.ts"],"sourcesContent":["\nconst cache = new Map<string, { value: any; expiry: number }>();\n\nexport function withCache<T extends (...args: any[]) => any>(\n  fn: T,\n  options: { ttl: number; getKey?: (...args: Parameters<T>) => string } = { ttl: 60 * 1000 }\n): (...args: Parameters<T>) => Promise<ReturnType<T>> {\n  return async function (...args: Parameters<T>): Promise<ReturnType<T>> {\n    const key = options.getKey ? options.getKey(...args) : JSON.stringify({ name: fn.name, args });\n    const now = Date.now();\n\n    const cached = cache.get(key);\n    if (cached && now < cached.expiry) {\n      return cached.value;\n    }\n\n    const result = await fn(...args);\n    cache.set(key, { value: result, expiry: now + options.ttl });\n\n    return result;\n  };\n}\n"],"names":[],"mappings":";;;AACA,MAAM,QAAQ,IAAI;AAEX,SAAS,UACd,EAAK,EACL,UAAwE;IAAE,KAAK,KAAK;AAAK,CAAC;IAE1F,OAAO,eAAgB,GAAG,IAAmB;QAC3C,MAAM,MAAM,QAAQ,MAAM,GAAG,QAAQ,MAAM,IAAI,QAAQ,KAAK,SAAS,CAAC;YAAE,MAAM,GAAG,IAAI;YAAE;QAAK;QAC5F,MAAM,MAAM,KAAK,GAAG;QAEpB,MAAM,SAAS,MAAM,GAAG,CAAC;QACzB,IAAI,UAAU,MAAM,OAAO,MAAM,EAAE;YACjC,OAAO,OAAO,KAAK;QACrB;QAEA,MAAM,SAAS,MAAM,MAAM;QAC3B,MAAM,GAAG,CAAC,KAAK;YAAE,OAAO;YAAQ,QAAQ,MAAM,QAAQ,GAAG;QAAC;QAE1D,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/bybit-api.ts"],"sourcesContent":["import { z } from 'zod';\nimport { withCache } from './cache';\n\n// #region Zod Schemas and Types\nexport const TickerInfoSchema = z.object({\n  lastPrice: z.string(),\n  highPrice24h: z.string(),\n  lowPrice24h: z.string(),\n  turnover24h: z.string(),\n  volume24h: z.string(),\n  price24hPcnt: z.string(),\n});\nexport type TickerInfo = z.infer<typeof TickerInfoSchema>;\n\nexport const OrderBookEntrySchema = z.tuple([z.string(), z.string()]);\nexport type OrderBookEntry = z.infer<typeof OrderBookEntrySchema>;\n\nexport const OrderBookSchema = z.object({\n  bids: z.array(OrderBookEntrySchema),\n  asks: z.array(OrderBookEntrySchema),\n  ts: z.string(),\n});\nexport type OrderBook = z.infer<typeof OrderBookSchema>;\n\nexport const RecentTradeSchema = z.object({\n  execId: z.string(),\n  execTime: z.union([z.string(), z.number()]),\n  price: z.string(),\n  qty: z.string(),\n  side: z.enum(['Buy', 'Sell']),\n  isBlockTrade: z.boolean().optional(),\n});\nexport type RecentTrade = z.infer<typeof RecentTradeSchema>;\n\nexport const KlineEntrySchema = z.object({\n    time: z.number(),\n    open: z.number(),\n    high: z.number(),\n    low: z.number(),\n    close: z.number(),\n    volume: z.number(),\n    turnover: z.number(),\n});\nexport type KlineEntry = z.infer<typeof KlineEntrySchema>;\n\n// #endregion\n\n// #region Constants\nexport const BYBIT_WEBSOCKET_URL = 'wss://stream.bybit.com/v5/public/spot';\nexport const DEFAULT_REQUEST_TIMEOUT = 10000;\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY_MS = 1000;\n// #endregion\n\ninterface ApiResponse<T> {\n  retCode: number;\n  retMsg: string;\n  result: T;\n  time: number;\n}\n\nasync function fetchWithRetry(\n  url: string, \n  options: RequestInit = {}\n): Promise<any | null> {\n  \n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), DEFAULT_REQUEST_TIMEOUT);\n  \n  const fetchOptions: RequestInit = {\n    cache: 'no-store',\n    signal: options.signal || controller.signal,\n    headers: { 'Content-Type': 'application/json', ...options.headers },\n    ...options\n  };\n\n  for (let i = 0; i <= MAX_RETRIES; i++) {\n    try {\n      const response = await fetch(url, fetchOptions);\n      clearTimeout(timeoutId);\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      if (data.retCode !== 0) throw new Error(data.retMsg);\n      return data;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (i === MAX_RETRIES) {\n        console.error(`Failed to fetch from Bybit endpoint ${url} after ${MAX_RETRIES} retries:`, error);\n        return null;\n      }\n      await new Promise(res => setTimeout(res, RETRY_DELAY_MS * Math.pow(2, i)));\n    }\n  }\n  return null;\n}\n\nconst intervalMap: Record<string, string> = {\n  '1m': '1', '5m': '5', '15m': '15', '30m': '30', '1h': '60',\n  '2h': '120', '4h': '240', '6h': '360', '12h': '720', '1d': 'D',\n  '1w': 'W', '1M': 'M',\n};\n\nexport class BybitAPI {\n  private config: { baseUrl: string };\n\n  constructor(config: { baseUrl: string }) {\n    this.config = config;\n  }\n\n  private async get(endpoint: string, params?: Record<string, any>): Promise<any> {\n    const url = new URL(this.config.baseUrl + endpoint);\n    if(params) {\n        Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    }\n    \n    const cachedFetch = withCache(fetchWithRetry, {\n      ttl: endpoint.includes('kline') ? 60000 : 10000,\n      getKey: (url: string) => url,\n    });\n    \n    return cachedFetch(url.toString());\n  }\n\n  public async fetchHistoricalData(symbol: string, timeframe: string, limit: number = 200): Promise<any> {\n    const interval = intervalMap[timeframe] || timeframe;\n    return this.get('/v5/market/kline', { category: 'spot', symbol, interval, limit });\n  }\n\n  public async fetchMarketData(symbol: string): Promise<any> {\n    return this.get('/v5/market/tickers', { category: 'spot', symbol });\n  }\n\n  public async fetchOrderBook(symbol: string, limit: number = 50): Promise<any> {\n    return this.get('/v5/market/orderbook', { category: 'spot', symbol, limit });\n  }\n\n  public async fetchRecentTrades(symbol: string, limit: number = 50): Promise<any> {\n    return this.get('/v5/market/recent-trade', { category: 'spot', symbol, limit });\n  }\n}\n\n// Keep original functional versions for components that might still use them, but now they use the class.\nconst api = new BybitAPI({ baseUrl: 'https://api.bybit.com' });\n\nexport const getTicker = async (symbol: string): Promise<TickerInfo | null> => {\n    const data = await api.fetchMarketData(symbol);\n    if(data && data.result.list.length > 0) return TickerInfoSchema.parse(data.result.list[0]);\n    return null;\n}\n\nexport const getOrderBook = async (symbol: string): Promise<OrderBook | null> => {\n    const data = await api.fetchOrderBook(symbol);\n    if(data) return { bids: data.result.b, asks: data.result.a, ts: data.result.ts };\n    return null;\n}\n\nexport const getRecentTrades = async (symbol: string, limit: number = 30): Promise<RecentTrade[]> => {\n    const data = await api.fetchRecentTrades(symbol, limit);\n    if(data && data.result.list) return z.array(RecentTradeSchema).parse(data.result.list);\n    return [];\n}\n\nexport const getKline = async (symbol: string, interval: string, limit: number = 100): Promise<KlineEntry[] | null> => {\n    const data = await api.fetchHistoricalData(symbol, interval, limit);\n    if(data && data.result.list) {\n      return z.array(KlineEntrySchema).parse(data.result.list.map((k: string[]) => ({\n        time: parseInt(k[0]), open: parseFloat(k[1]), high: parseFloat(k[2]),\n        low: parseFloat(k[3]), close: parseFloat(k[4]), volume: parseFloat(k[5]), turnover: parseFloat(k[6])\n      })).reverse());\n    }\n    return null;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/indicators.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { KlineEntry } from './bybit-api';\n\n// #region Schemas and Types\nexport const IndicatorSettings = z.object({\n  rsi: z.object({ period: z.number().int().positive().default(14), overbought: z.number().default(70), oversold: z.number().default(30) }).default({}),\n  macd: z.object({ fast: z.number().int().positive().default(12), slow: z.number().int().positive().default(26), signal: z.number().int().positive().default(9) }).default({}),\n  bollingerBands: z.object({ period: z.number().int().positive().default(20), stdDev: z.number().positive().default(2) }).default({}),\n  stochastic: z.object({ period: z.number().int().positive().default(14), slowing: z.number().int().positive().default(3), overbought: z.number().default(80), oversold: z.number().default(20) }).default({}),\n  atr: z.object({ period: z.number().int().positive().default(14) }).default({}),\n  williamsR: z.object({ period: z.number().int().positive().default(14), overbought: z.number().default(-20), oversold: z.number().default(-80) }).default({}),\n  cci: z.object({ period: z.number().int().positive().default(20), overbought: z.number().default(100), oversold: z.number().default(-100) }).default({}),\n  roc: z.object({ period: z.number().int().positive().default(12) }).default({}),\n  mfi: z.object({ period: z.number().int().positive().default(14), overbought: z.number().default(80), oversold: z.number().default(20) }).default({}),\n  awesomeOscillator: z.object({ fast: z.number().int().positive().default(5), slow: z.number().int().positive().default(34) }).default({}),\n  ichimokuCloud: z.object({ tenkan: z.number().int().positive().default(9), kijun: z.number().int().positive().default(26), senkou: z.number().int().positive().default(52), displacement: z.number().int().positive().default(26) }).default({}),\n  sma: z.object({ period: z.number().int().positive().default(20) }).default({}),\n  supertrendFast: z.object({ atrPeriod: z.number().int().positive().default(10), multiplier: z.number().positive().default(2) }).default({}),\n  supertrendSlow: z.object({ atrPeriod: z.number().int().positive().default(20), multiplier: z.number().positive().default(4) }).default({}),\n  fisher: z.object({ period: z.number().int().positive().default(9) }).default({}),\n  ehlers: z.object({ period: z.number().int().positive().default(10) }).default({}),\n  chandelier: z.object({ period: z.number().int().positive().default(22), multiplier: z.number().positive().default(3) }).default({}),\n});\nexport type IndicatorSettings = z.infer<typeof IndicatorSettings>;\n\nexport const defaultIndicatorSettings: IndicatorSettings = IndicatorSettings.parse({});\n\nconst RsiResultSchema = z.object({ rsi: z.number() });\nconst MacdResultSchema = z.object({ macd: z.number(), signal: z.number(), histogram: z.number() });\nconst BollingerBandsResultSchema = z.object({ upper: z.number(), middle: z.number(), lower: z.number() });\nconst StochasticResultSchema = z.object({ k: z.number(), d: z.number() });\nconst AtrResultSchema = z.object({ atr: z.number() });\nconst ObvResultSchema = z.object({ obv: z.number() });\nconst WilliamsRResultSchema = z.object({ williamsR: z.number() });\nconst CciResultSchema = z.object({ cci: z.number() });\nconst RocResultSchema = z.object({ roc: z.number() });\nconst MfiResultSchema = z.object({ mfi: z.number() });\nconst AwesomeOscillatorResultSchema = z.object({ ao: z.number() });\nconst IchimokuCloudResultSchema = z.object({ tenkanSen: z.number(), kijunSen: z.number(), senkouSpanA: z.number(), senkouSpanB: z.number() });\nconst SmaResultSchema = z.object({ sma: z.number() });\nconst SupertrendResultSchema = z.object({ direction: z.enum(['buy', 'sell']), supertrend: z.number() });\nconst FisherTransformResultSchema = z.object({ fisher: z.number(), trigger: z.number() });\nconst EhlersTrendlineResultSchema = z.object({ trendline: z.number() });\nconst ChandelierExitResultSchema = z.object({ long: z.number(), short: z.number() });\n\n\nexport const IndicatorDataSchema = z.object({\n    rsi: RsiResultSchema.optional(),\n    macd: MacdResultSchema.optional(),\n    bollingerBands: BollingerBandsResultSchema.optional(),\n    stochastic: StochasticResultSchema.optional(),\n    atr: AtrResultSchema.optional(),\n    obv: ObvResultSchema.optional(),\n    williamsR: WilliamsRResultSchema.optional(),\n    cci: CciResultSchema.optional(),\n    roc: RocResultSchema.optional(),\n    mfi: MfiResultSchema.optional(),\n    awesomeOscillator: AwesomeOscillatorResultSchema.optional(),\n    ichimokuCloud: IchimokuCloudResultSchema.optional(),\n    sma: SmaResultSchema.optional(),\n    supertrendFast: SupertrendResultSchema.optional(),\n    supertrendSlow: SupertrendResultSchema.optional(),\n    fisher: FisherTransformResultSchema.optional(),\n    ehlers: EhlersTrendlineResultSchema.optional(),\n    chandelier: ChandelierExitResultSchema.optional(),\n});\nexport type IndicatorData = z.infer<typeof IndicatorDataSchema>;\n// #endregion\n\n// #region Calculation Utilities\nfunction sma(data: number[], period: number): (number | null)[] {\n    if (data.length < period) return new Array(data.length).fill(null);\n    \n    const results: (number | null)[] = new Array(period - 1).fill(null);\n    let sum = 0;\n    for (let i = 0; i < period; i++) {\n        sum += data[i];\n    }\n    results.push(sum / period);\n\n    for (let i = period; i < data.length; i++) {\n        sum += data[i] - data[i - period];\n        results.push(sum / period);\n    }\n    return results;\n}\n\nfunction ema(data: number[], period: number): (number | null)[] {\n    if (data.length < period) return new Array(data.length).fill(null);\n    \n    const results: (number | null)[] = [];\n    const multiplier = 2 / (period + 1);\n    \n    let sum = 0;\n    for (let i = 0; i < period; i++) {\n        sum += data[i];\n        results.push(null);\n    }\n    \n    let prevEma = sum / period;\n    results[period - 1] = prevEma;\n\n    for (let i = period; i < data.length; i++) {\n        const emaValue = (data[i] - prevEma) * multiplier + prevEma;\n        results.push(emaValue);\n        prevEma = emaValue;\n    }\n    return results;\n}\n\nabstract class Indicator<T = number | object | null> {\n    protected data: KlineEntry[];\n    constructor(data: KlineEntry[]) { this.data = data; }\n    abstract calculate(): (T | null)[];\n    \n    public getResult(): T | undefined {\n        const results = this.calculate();\n        const lastResult = results.length > 0 ? results[results.length - 1] : null;\n\n        if (lastResult === null || lastResult === undefined) return undefined;\n\n        if (typeof lastResult === 'object') {\n            for (const key in lastResult) {\n                const value = (lastResult as any)[key];\n                if (typeof value === 'number' && (isNaN(value) || !isFinite(value))) {\n                    return undefined;\n                }\n            }\n        } else if (typeof lastResult === 'number' && (isNaN(lastResult) || !isFinite(lastResult))) {\n            return undefined;\n        }\n\n        return lastResult as T;\n    }\n}\n// #endregion\n\n// #region Indicator Classes\nclass SMA extends Indicator<z.infer<typeof SmaResultSchema>> {\n    constructor(data: KlineEntry[], private period: number) { super(data); }\n    calculate(): (z.infer<typeof SmaResultSchema> | null)[] {\n        const closes = this.data.map(d => d.close);\n        const smaValues = sma(closes, this.period);\n        return smaValues.map(s => s === null ? null : { sma: s });\n    }\n}\n\nclass RSI extends Indicator<z.infer<typeof RsiResultSchema>> {\n    constructor(data: KlineEntry[], private period: number) { super(data); }\n    calculate(): (z.infer<typeof RsiResultSchema> | null)[] {\n        const closes = this.data.map(d => d.close);\n        if (closes.length <= this.period) return new Array(closes.length).fill(null);\n\n        const results: (z.infer<typeof RsiResultSchema> | null)[] = new Array(this.period).fill(null);\n        let gains = 0, losses = 0;\n\n        for (let i = 1; i <= this.period; i++) {\n            const diff = closes[i] - closes[i - 1];\n            if (diff > 0) gains += diff;\n            else losses -= diff;\n        }\n\n        let avgGain = gains / this.period;\n        let avgLoss = losses / this.period;\n\n        let rs = avgLoss !== 0 ? avgGain / avgLoss : 0;\n        results.push({ rsi: 100 - (100 / (1 + rs)) });\n\n        for (let i = this.period + 1; i < closes.length; i++) {\n            const diff = closes[i] - closes[i - 1];\n            let gain = 0, loss = 0;\n            if (diff > 0) gain = diff;\n            else loss = -diff;\n\n            avgGain = (avgGain * (this.period - 1) + gain) / this.period;\n            avgLoss = (avgLoss * (this.period - 1) + loss) / this.period;\n            \n            rs = avgLoss !== 0 ? avgGain / avgLoss : 0;\n            results.push({ rsi: 100 - (100 / (1 + rs)) });\n        }\n        return results;\n    }\n}\n\nclass MACD extends Indicator<z.infer<typeof MacdResultSchema>> {\n    constructor(data: KlineEntry[], private fast: number, private slow: number, private signal: number) { super(data); }\n    calculate(): (z.infer<typeof MacdResultSchema> | null)[] {\n        const closes = this.data.map(d => d.close);\n        const emaFast = ema(closes, this.fast);\n        const emaSlow = ema(closes, this.slow);\n\n        const macdLine = emaFast.map((f, i) => (f === null || emaSlow[i] === null) ? null : f - emaSlow[i]!);\n        const signalLine = ema(macdLine.filter(m => m !== null) as number[], this.signal);\n\n        let signalIdx = 0;\n        return macdLine.map(m => {\n            if (m === null) return null;\n            const signalVal = signalLine[signalIdx];\n            signalIdx++;\n            if (signalVal === null || signalVal === undefined) return null;\n            return { macd: m, signal: signalVal, histogram: m - signalVal };\n        });\n    }\n}\n\nclass BollingerBands extends Indicator<z.infer<typeof BollingerBandsResultSchema>> {\n    constructor(data: KlineEntry[], private period: number, private stdDev: number) { super(data); }\n    calculate(): (z.infer<typeof BollingerBandsResultSchema> | null)[] {\n        const closes = this.data.map(d => d.close);\n        const middleBand = sma(closes, this.period);\n\n        return middleBand.map((mb, i) => {\n            if (mb === null) return null;\n            const slice = closes.slice(i - this.period + 1, i + 1);\n            const variance = slice.reduce((acc, val) => acc + Math.pow(val - mb, 2), 0) / this.period;\n            const sd = Math.sqrt(variance);\n            return { upper: mb + (sd * this.stdDev), middle: mb, lower: mb - (sd * this.stdDev) };\n        });\n    }\n}\n\nclass Stochastic extends Indicator<z.infer<typeof StochasticResultSchema>> {\n    constructor(data: KlineEntry[], private period: number, private slowing: number) { super(data); }\n    calculate(): (z.infer<typeof StochasticResultSchema> | null)[] {\n        const kValues: (number | null)[] = new Array(this.period - 1).fill(null);\n        for (let i = this.period - 1; i < this.data.length; i++) {\n            const slice = this.data.slice(i - this.period + 1, i + 1);\n            const highestHigh = Math.max(...slice.map(d => d.high));\n            const lowestLow = Math.min(...slice.map(d => d.low));\n            const k = lowestLow === highestHigh ? 100 : ((this.data[i].close - lowestLow) / (highestHigh - lowestLow)) * 100;\n            kValues.push(k);\n        }\n        const dValues = sma(kValues.filter(k => k !== null) as number[], this.slowing);\n        \n        let dIdx = 0;\n        return kValues.map(k => {\n            if(k === null) return null;\n            const d = dValues[dIdx];\n            dIdx++;\n            if (d === null || d === undefined) return null;\n            return { k, d };\n        })\n    }\n}\n\nclass ATR extends Indicator<z.infer<typeof AtrResultSchema>> {\n    constructor(data: KlineEntry[], private period: number) { super(data); }\n    calculate(): (z.infer<typeof AtrResultSchema> | null)[] {\n        if (this.data.length < this.period) return new Array(this.data.length).fill(null);\n\n        const trs: number[] = [this.data[0].high - this.data[0].low];\n        for (let i = 1; i < this.data.length; i++) {\n            trs.push(Math.max(\n                this.data[i].high - this.data[i].low,\n                Math.abs(this.data[i].high - this.data[i-1].close),\n                Math.abs(this.data[i].low - this.data[i-1].close)\n            ));\n        }\n        const atrSma = sma(trs, this.period);\n        return atrSma.map(a => a === null ? null : { atr: a });\n    }\n}\n\nclass OBV extends Indicator<z.infer<typeof ObvResultSchema>> {\n    constructor(data: KlineEntry[]) { super(data); }\n    calculate(): (z.infer<typeof ObvResultSchema> | null)[] {\n        if(this.data.length === 0) return [];\n        const results: (z.infer<typeof ObvResultSchema> | null)[] = [{ obv: 0 }];\n        for (let i = 1; i < this.data.length; i++) {\n            const prevObv = results[i-1]!.obv;\n            const close = this.data[i].close;\n            const prevClose = this.data[i - 1].close;\n            const volume = this.data[i].volume;\n            if (close > prevClose) results.push({ obv: prevObv + volume });\n            else if (close < prevClose) results.push({ obv: prevObv - volume });\n            else results.push({ obv: prevObv });\n        }\n        return results;\n    }\n}\n\nclass WilliamsR extends Indicator<z.infer<typeof WilliamsRResultSchema>> {\n    constructor(data: KlineEntry[], private period: number) { super(data); }\n    calculate(): (z.infer<typeof WilliamsRResultSchema> | null)[] {\n        return this.data.map((_, i) => {\n            if (i < this.period - 1) return null;\n            const slice = this.data.slice(i - this.period + 1, i + 1);\n            const highestHigh = Math.max(...slice.map(d => d.high));\n            const lowestLow = Math.min(...slice.map(d => d.low));\n            const r = lowestLow === highestHigh ? -50 : ((highestHigh - this.data[i].close) / (highestHigh - lowestLow)) * -100;\n            return { williamsR: r };\n        });\n    }\n}\n\nclass CCI extends Indicator<z.infer<typeof CciResultSchema>> {\n    constructor(data: KlineEntry[], private period: number) { super(data); }\n    calculate(): (z.infer<typeof CciResultSchema> | null)[] {\n        return this.data.map((_, i) => {\n            if (i < this.period - 1) return null;\n            const slice = this.data.slice(i - this.period + 1, i + 1);\n            const typicalPrices = slice.map(d => (d.high + d.low + d.close) / 3);\n            const smaTp = typicalPrices.reduce((a, b) => a + b, 0) / this.period;\n            const meanDeviation = typicalPrices.reduce((acc, val) => acc + Math.abs(val - smaTp), 0) / this.period;\n            if(meanDeviation === 0) return { cci: 0 };\n            const cci = ((typicalPrices[this.period - 1] - smaTp) / (0.015 * meanDeviation));\n            return { cci };\n        });\n    }\n}\n\nclass ROC extends Indicator<z.infer<typeof RocResultSchema>> {\n    constructor(data: KlineEntry[], private period: number) { super(data); }\n    calculate(): (z.infer<typeof RocResultSchema> | null)[] {\n        const closes = this.data.map(d => d.close);\n        return closes.map((c, i) => {\n            if (i < this.period) return null;\n            const prevClose = closes[i - this.period];\n            if(prevClose === 0) return { roc: 0 };\n            return { roc: ((c - prevClose) / prevClose) * 100 };\n        });\n    }\n}\n\nclass MFI extends Indicator<z.infer<typeof MfiResultSchema>> {\n    constructor(data: KlineEntry[], private period: number) { super(data); }\n    calculate(): (z.infer<typeof MfiResultSchema> | null)[] {\n        const typicalPrices = this.data.map(d => (d.high + d.low + d.close) / 3);\n        const rawMoneyFlow = typicalPrices.map((tp, i) => tp * this.data[i].volume);\n\n        const posMoneyFlow: number[] = [], negMoneyFlow: number[] = [];\n        for (let i = 1; i < typicalPrices.length; i++) {\n            if (typicalPrices[i] > typicalPrices[i-1]) {\n                posMoneyFlow.push(rawMoneyFlow[i]);\n                negMoneyFlow.push(0);\n            } else {\n                posMoneyFlow.push(0);\n                negMoneyFlow.push(rawMoneyFlow[i]);\n            }\n        }\n        \n        const results: (z.infer<typeof MfiResultSchema> | null)[] = new Array(this.period).fill(null);\n\n        for (let i = this.period; i < typicalPrices.length; i++) {\n            const posSum = posMoneyFlow.slice(i - this.period, i).reduce((a, b) => a + b, 0);\n            const negSum = negMoneyFlow.slice(i - this.period, i).reduce((a, b) => a + b, 0);\n            if (negSum === 0) {\n                 results.push({ mfi: 100 });\n                 continue;\n            }\n            const moneyRatio = posSum / negSum;\n            results.push({ mfi: 100 - (100 / (1 + moneyRatio)) });\n        }\n        return results;\n    }\n}\n\nclass AwesomeOscillator extends Indicator<z.infer<typeof AwesomeOscillatorResultSchema>> {\n    constructor(data: KlineEntry[], private fast: number, private slow: number) { super(data); }\n    calculate(): (z.infer<typeof AwesomeOscillatorResultSchema> | null)[] {\n        const midpoints = this.data.map(d => (d.high + d.low) / 2);\n        const smaFast = sma(midpoints, this.fast);\n        const smaSlow = sma(midpoints, this.slow);\n        return smaSlow.map((s, i) => {\n            if (s === null || smaFast[i] === null) return null;\n            return { ao: smaFast[i]! - s };\n        });\n    }\n}\n\nclass IchimokuCloud extends Indicator<z.infer<typeof IchimokuCloudResultSchema>> {\n    constructor(data: KlineEntry[], private tenkan: number, private kijun: number, private senkou: number) { super(data); }\n    calculate(): (z.infer<typeof IchimokuCloudResultSchema> | null)[] {\n        const results: (z.infer<typeof IchimokuCloudResultSchema> | null)[] = [];\n        for (let i = 0; i < this.data.length; i++) {\n            const tenkanSen = this.getTenkan(i);\n            const kijunSen = this.getKijun(i);\n            const senkouSpanA = (tenkanSen !== null && kijunSen !== null) ? (tenkanSen + kijunSen) / 2 : null;\n            const senkouSpanB = this.getSenkouB(i);\n            results.push( tenkanSen === null ? null : { tenkanSen, kijunSen, senkouSpanA, senkouSpanB });\n        }\n        return results;\n    }\n    private getTenkan(i: number) {\n        if (i < this.tenkan - 1) return null;\n        const slice = this.data.slice(i - this.tenkan + 1, i + 1);\n        const high = Math.max(...slice.map(d => d.high));\n        const low = Math.min(...slice.map(d => d.low));\n        return (high + low) / 2;\n    }\n    private getKijun(i: number) {\n        if (i < this.kijun - 1) return null;\n        const slice = this.data.slice(i - this.kijun + 1, i + 1);\n        const high = Math.max(...slice.map(d => d.high));\n        const low = Math.min(...slice.map(d => d.low));\n        return (high + low) / 2;\n    }\n    private getSenkouB(i: number) {\n        if (i < this.senkou - 1) return null;\n        const slice = this.data.slice(i - this.senkou + 1, i + 1);\n        const high = Math.max(...slice.map(d => d.high));\n        const low = Math.min(...slice.map(d => d.low));\n        return (high + low) / 2;\n    }\n}\n\nclass Supertrend extends Indicator<z.infer<typeof SupertrendResultSchema>> {\n    constructor(data: KlineEntry[], private period: number, private multiplier: number) { super(data); }\n    calculate(): (z.infer<typeof SupertrendResultSchema> | null)[] {\n        const atrIndicator = new ATR(this.data, this.period);\n        const atrs = atrIndicator.calculate();\n        const results: (z.infer<typeof SupertrendResultSchema> | null)[] = new Array(this.data.length).fill(null);\n        let direction: 'buy' | 'sell' = 'buy';\n        let upperBand = 0, lowerBand = 0, supertrend = 0;\n\n        for (let i = this.period; i < this.data.length; i++) {\n            const close = this.data[i].close;\n            const high = this.data[i].high;\n            const low = this.data[i].low;\n            const atrResult = atrs[i];\n\n            if (atrResult === null) continue;\n            const atr = atrResult.atr;\n\n            const prevResult = results[i-1];\n            const prevSupertrend = prevResult ? prevResult.supertrend : 0;\n            const prevDirection = prevResult ? prevResult.direction : 'buy';\n\n            upperBand = ((high + low) / 2) + (this.multiplier * atr);\n            lowerBand = ((high + low) / 2) - (this.multiplier * atr);\n            \n            if (prevDirection === 'buy') {\n                if (close < prevSupertrend) {\n                    direction = 'sell';\n                    supertrend = upperBand;\n                } else {\n                    direction = 'buy';\n                    supertrend = Math.max(lowerBand, prevSupertrend);\n                }\n            } else { // 'sell'\n                if (close > prevSupertrend) {\n                    direction = 'buy';\n                    supertrend = lowerBand;\n                } else {\n                    direction = 'sell';\n                    supertrend = Math.min(upperBand, prevSupertrend);\n                }\n            }\n            results[i] = { direction, supertrend };\n        }\n        return results;\n    }\n}\n\n\nclass FisherTransform extends Indicator<z.infer<typeof FisherTransformResultSchema>> {\n    constructor(data: KlineEntry[], private period: number) { super(data); }\n    calculate(): (z.infer<typeof FisherTransformResultSchema> | null)[] {\n        const results: (z.infer<typeof FisherTransformResultSchema> | null)[] = [];\n        let fisherValues: number[] = [];\n        for (let i = 0; i < this.data.length; i++) {\n             if (i < this.period - 1) {\n                results.push(null);\n                continue;\n            }\n            const slice = this.data.slice(i - this.period + 1, i + 1);\n            const highest = Math.max(...slice.map(d => (d.high + d.low)/2));\n            const lowest = Math.min(...slice.map(d => (d.high + d.low)/2));\n            let value = 0.33 * 2 * ((((this.data[i].high + this.data[i].low)/2 - lowest) / (highest - lowest)) - 0.5) + 0.67 * (results[i-1]?.fisher ?? 0);\n            if (value > 0.99) value = 0.999;\n            if (value < -0.99) value = -0.999;\n\n            const fisher = 0.5 * Math.log((1 + value) / (1 - value))\n            fisherValues.push(fisher);\n            const trigger = fisherValues.length > 1 ? fisherValues[fisherValues.length - 2] : 0;\n            results.push({ fisher, trigger });\n        }\n        return results;\n    }\n}\n\nclass EhlersTrendline extends Indicator<z.infer<typeof EhlersTrendlineResultSchema>> {\n    constructor(data: KlineEntry[], private period: number) { super(data); }\n    calculate(): (z.infer<typeof EhlersTrendlineResultSchema> | null)[] {\n        const prices = this.data.map(d => (d.high + d.low) / 2);\n        const trendlines: (number|null)[] = [];\n        for (let i = 0; i < prices.length; i++) {\n             if (i < this.period) {\n                trendlines.push(null);\n                continue;\n            }\n            let sum = 0;\n            for (let j = 0; j < this.period; j++) {\n                sum += prices[i - j] * (j + 1);\n            }\n            trendlines.push(sum / ((this.period * (this.period + 1)) / 2));\n        }\n        return trendlines.map(t => t === null ? null : { trendline: t });\n    }\n}\n\nclass ChandelierExit extends Indicator<z.infer<typeof ChandelierExitResultSchema>> {\n    constructor(data: KlineEntry[], private period: number, private multiplier: number) { super(data); }\n    calculate(): (z.infer<typeof ChandelierExitResultSchema> | null)[] {\n        const atrIndicator = new ATR(this.data, this.period);\n        const atrs = atrIndicator.calculate();\n        const results: (z.infer<typeof ChandelierExitResultSchema> | null)[] = [];\n        \n        for (let i = 0; i < this.data.length; i++) {\n             if (i < this.period || atrs[i] === null) {\n                results.push(null);\n                continue;\n            }\n            const dataSlice = this.data.slice(i - this.period + 1, i + 1);\n            const highestHigh = Math.max(...dataSlice.map(d => d.high));\n            const lowestLow = Math.min(...dataSlice.map(d => d.low));\n            const atr = atrs[i]!.atr;\n\n            results.push({\n                long: highestHigh - atr * this.multiplier,\n                short: lowestLow + atr * this.multiplier,\n            });\n        }\n        return results;\n    }\n}\n// #endregion\n\n// #region Main Calculation Function\nexport function calculateIndicators(data: KlineEntry[], settings: IndicatorSettings): IndicatorData | null {\n  if (data.length === 0) return null;\n\n  return {\n    sma: new SMA(data, settings.sma.period).getResult(),\n    rsi: new RSI(data, settings.rsi.period).getResult(),\n    macd: new MACD(data, settings.macd.fast, settings.macd.slow, settings.macd.signal).getResult(),\n    bollingerBands: new BollingerBands(data, settings.bollingerBands.period, settings.bollingerBands.stdDev).getResult(),\n    stochastic: new Stochastic(data, settings.stochastic.period, settings.stochastic.slowing).getResult(),\n    atr: new ATR(data, settings.atr.period).getResult(),\n    obv: new OBV(data).getResult(),\n    williamsR: new WilliamsR(data, settings.williamsR.period).getResult(),\n    cci: new CCI(data, settings.cci.period).getResult(),\n    roc: new ROC(data, settings.roc.period).getResult(),\n    mfi: new MFI(data, settings.mfi.period).getResult(),\n    awesomeOscillator: new AwesomeOscillator(data, settings.awesomeOscillator.fast, settings.awesomeOscillator.slow).getResult(),\n    ichimokuCloud: new IchimokuCloud(data, settings.ichimokuCloud.tenkan, settings.ichimokuCloud.kijun, settings.ichimokuCloud.senkou).getResult(),\n    supertrendFast: new Supertrend(data, settings.supertrendFast.atrPeriod, settings.supertrendFast.multiplier).getResult(),\n    supertrendSlow: new Supertrend(data, settings.supertrendSlow.atrPeriod, settings.supertrendSlow.multiplier).getResult(),\n    fisher: new FisherTransform(data, settings.fisher.period).getResult(),\n    ehlers: new EhlersTrendline(data, settings.ehlers.period).getResult(),\n    chandelier: new ChandelierExit(data, settings.chandelier.period, settings.chandelier.multiplier).getResult(),\n  };\n}\n// #endregion\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1191, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-trading-signal.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent that generates trading signals and market analysis.\n *\n * - generateTradingSignal - A function that generates trading signals and market analysis.\n * - GenerateTradingSignalInput - The input type for the generateTradingSignal function.\n * - GenerateTradingSignalOutput - The return type for the generateTradingSignal function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\nimport { getKlineData, getOrderBookData, getIndicatorData, getMarketData, analyzeOrderBook as anlyzeOrderBookUtil, getRecentTradesData } from '@/lib/actions';\nimport { KlineEntrySchema, OrderBookSchema, RecentTradeSchema, TickerInfoSchema, type OrderBook, type TickerInfo, type KlineEntry } from '@/lib/bybit-api';\nimport { IndicatorSettings, IndicatorDataSchema } from '@/lib/indicators';\n\n\nconst GenerateTradingSignalInputSchema = z.object({\n  symbol: z.string().describe('The trading symbol (e.g., BTCUSDT).'),\n  timeframe: z.string().describe('The timeframe for the chart and data (e.g., 1m, 5m, 1h, 1d).'),\n  indicatorSettings: IndicatorSettings.optional().describe('The settings for the technical indicators.'),\n});\nexport type GenerateTradingSignalInput = z.infer<typeof GenerateTradingSignalInputSchema>;\n\nconst GenerateTradingSignalOutputSchema = z.object({\n  currentPrice: z.number().describe('The current price of the asset.'),\n  entryPrice: z.number().describe('The recommended entry price for the trade.'),\n  takeProfit: z.number().describe('The recommended take-profit price level.'),\n  stopLoss: z.number().describe('The recommended stop-loss price level.'),\n  signal: z.enum(['Buy', 'Sell', 'Hold']).describe('The trading signal: Buy, Sell, or Hold.'),\n  reasoning: z.string().describe('Detailed reasoning for the generated signal, based on market analysis.'),\n  confidenceLevel: z.enum(['High', 'Medium', 'Low']).describe('The confidence level of the signal.'),\n});\nexport type GenerateTradingSignalOutput = z.infer<typeof GenerateTradingSignalOutputSchema>;\n\n// Tool Definitions\nconst getKlineDataTool = ai.defineTool({ name: 'getKlineData', description: 'Get candlestick (Kline) data.', inputSchema: z.object({ symbol: z.string(), timeframe: z.string() }), outputSchema: z.array(KlineEntrySchema).nullable() }, getKlineData);\nconst getOrderBookDataTool = ai.defineTool({ name: 'getOrderBookData', description: 'Get order book data.', inputSchema: z.object({ symbol: z.string() }), outputSchema: OrderBookSchema.nullable() }, getOrderBookData);\nconst getRecentTradesDataTool = ai.defineTool({ name: 'getRecentTradesData', description: 'Get recent public trades.', inputSchema: z.object({ symbol: z.string() }), outputSchema: z.array(RecentTradeSchema).nullable() }, getRecentTradesData);\nconst getIndicatorDataTool = ai.defineTool({ name: 'getIndicatorData', description: 'Get technical indicator data.', inputSchema: z.object({ symbol: z.string(), timeframe: z.string(), settings: IndicatorSettings.optional() }), outputSchema: IndicatorDataSchema.nullable() }, getIndicatorData);\nconst getMarketDataTool = ai.defineTool({ name: 'getMarketData', description: 'Get the latest market ticker data.', inputSchema: z.object({ symbol: z.string() }), outputSchema: TickerInfoSchema.nullable() }, getMarketData);\nconst analyzeOrderBookTool = ai.defineTool({ name: 'analyzeOrderBook', description: 'Analyze order book to find support/resistance.', inputSchema: OrderBookSchema, outputSchema: z.object({ support: z.array(z.number()), resistance: z.array(z.number()) }) }, anlyzeOrderBookUtil);\n\nexport async function generateTradingSignal(input: z.infer<typeof GenerateTradingSignalInputSchema>): Promise<z.infer<typeof GenerateTradingSignalOutputSchema>> {\n  return generateTradingSignalFlow(input);\n}\n\nconst tradingSignalPrompt = ai.definePrompt({\n  name: 'tradingSignalPrompt',\n  output: { format: 'json', schema: GenerateTradingSignalOutputSchema },\n  tools: [getKlineDataTool, getOrderBookDataTool, getRecentTradesDataTool, getIndicatorDataTool, getMarketDataTool, analyzeOrderBookTool],\n  system: `You are an expert financial analyst AI. Your goal is to generate a trading signal based on a comprehensive analysis of market data.\n\n  **Process:**\n  1.  **Get Current Price:** Start by calling \\`getMarketData\\` to get the current price. This is essential. If it fails, you cannot proceed.\n  2.  **Gather Data:** Call all other available data tools (\\`getKlineData\\`, \\`getOrderBookData\\`, \\`getRecentTradesData\\`, \\`getIndicatorData\\`) to build a complete picture of the market.\n  3.  **Analyze Order Book:** If \\`getOrderBookData\\` was successful, immediately pass its output to \\`analyzeOrderBook\\` to identify key support and resistance levels.\n  4.  **Synthesize Findings:** Review all the data you have gathered. Look for confirmations or divergences between different data sources (e.g., does the RSI confirm the price action? Does the order book support a potential breakout?).\n  5.  **Formulate Reasoning:** Construct a detailed, step-by-step \\`reasoning\\` for your final decision. Reference specific data points (e.g., \"RSI is 78, indicating overbought conditions,\" \"Strong resistance identified at $52,000 by order book analysis\"). If a tool failed, you MUST mention it in your reasoning (e.g., \"Could not retrieve indicator data, so confidence is lowered.\").\n  6.  **Generate Signal:** Based on your reasoning, determine the \\`signal\\` (Buy, Sell, or Hold), \\`entryPrice\\`, \\`takeProfit\\`, and \\`stopLoss\\`.\n  7.  **Set Confidence:** Determine the \\`confidenceLevel\\` based on how much data you could retrieve and how strongly it points to a particular outcome.\n\n  Your final output must be a valid JSON object matching the provided schema.`,\n});\n\nconst generateTradingSignalFlow = ai.defineFlow({ name: 'generateTradingSignalFlow', inputSchema: GenerateTradingSignalInputSchema, outputSchema: GenerateTradingSignalOutputSchema }, async (input) => {\n    const response = await tradingSignalPrompt({ prompt: `Generate a trading signal for ${input.symbol} on the ${input.timeframe} timeframe. Indicator settings: ${JSON.stringify(input.indicatorSettings || {})}` });\n    \n    if (!response.output) {\n      throw new Error(\"AI failed to produce a valid response.\");\n    }\n    const output = response.output;\n\n    // Final validation\n    if (output.currentPrice === null || isNaN(output.currentPrice) || output.currentPrice <= 0) {\n        const marketData = await getMarketData(input.symbol);\n        if(marketData?.lastPrice) {\n            output.currentPrice = parseFloat(marketData.lastPrice);\n        } else {\n            throw new Error(\"AI failed to generate a valid signal with a positive current price.\");\n        }\n    }\n    \n    const requiredNumericFields: (keyof z.infer<typeof GenerateTradingSignalOutputSchema>)[] = ['entryPrice', 'takeProfit', 'stopLoss'];\n    for(const field of requiredNumericFields) {\n        if(output[field] === null || isNaN(output[field] as number) || (output[field] as number) <= 0) {\n            throw new Error(`AI generated an invalid or non-positive value for '${field}'.`);\n        }\n    }\n    \n    return output;\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1365, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { generateTradingSignal, type GenerateTradingSignalOutput } from '@/ai/flows/generate-trading-signal';\nimport { BybitAPI, type OrderBook, type TickerInfo, type KlineEntry, getRecentTrades as getRecentTradesFromApi, type RecentTrade } from '@/lib/bybit-api';\nimport { calculateIndicators, type IndicatorData, type IndicatorSettings, defaultIndicatorSettings } from '@/lib/indicators';\n\nconst bybitAPI = new BybitAPI({\n  baseUrl: 'https://api.bybit.com',\n});\n\n/**\n * The response shape for the AI trading signal analysis.\n */\nexport type AiSignalResponse = GenerateTradingSignalOutput;\n\n/**\n * Server action to generate an AI-powered trading signal.\n * This function calls the Genkit flow and handles its response or errors.\n *\n * @param symbol - The trading symbol (e.g., 'BTCUSDT').\n * @param timeframe - The chart timeframe (e.g., '1h').\n * @param indicatorSettings - Optional custom settings for technical indicators.\n * @returns An object containing the success status, the analysis, and an optional error message.\n */\nexport async function getAiTradingSignal(symbol: string, timeframe: string, indicatorSettings?: IndicatorSettings): Promise<{ success: boolean, analysis?: AiSignalResponse, error?: string }> {\n  try {\n    const result = await generateTradingSignal({ symbol, timeframe, indicatorSettings });\n    return { success: true, analysis: result };\n  } catch (error) {\n    console.error('Error generating AI trading signal:', error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return { success: false, error: errorMessage };\n  }\n}\n\n/**\n * Server action to get the latest market data (ticker info) for a symbol.\n *\n * @param symbol - The trading symbol.\n * @returns A promise that resolves to the TickerInfo object or null.\n */\nexport async function getMarketData(symbol: string): Promise<TickerInfo | null> {\n    const response = await bybitAPI.fetchMarketData(symbol);\n    if(response && response.result && response.result.list && response.result.list.length > 0) {\n      const ticker = response.result.list[0];\n      return {\n        lastPrice: ticker.lastPrice,\n        highPrice24h: ticker.highPrice24h,\n        lowPrice24h: ticker.lowPrice24h,\n        turnover24h: ticker.turnover24h,\n        volume24h: ticker.volume24h,\n        price24hPcnt: ticker.price24hPcnt,\n      }\n    }\n    return null;\n}\n\n/**\n * Server action to get the order book for a symbol.\n *\n * @param symbol - The trading symbol.\n * @returns A promise that resolves to the OrderBook object or null.\n */\nexport async function getOrderBookData(symbol: string): Promise<OrderBook | null> {\n    const response = await bybitAPI.fetchOrderBook(symbol);\n    if (response && response.result) {\n      return {\n        bids: response.result.b,\n        asks: response.result.a,\n        ts: response.result.ts,\n      }\n    }\n    return null;\n}\n\n/**\n * Server action to get Kline (candlestick) data.\n *\n * @param symbol - The trading symbol.\n * @param timeframe - The timeframe interval (e.g., '1h', '4h').\n * @returns A promise that resolves to an array of Kline entries or null.\n */\nexport async function getKlineData(symbol: string, timeframe: string): Promise<KlineEntry[] | null> {\n    const response = await bybitAPI.fetchHistoricalData(symbol, timeframe);\n    if(response && response.result && response.result.list) {\n      return response.result.list.map((d: string[]) => ({\n        time: parseInt(d[0]),\n        open: parseFloat(d[1]),\n        high: parseFloat(d[2]),\n        low: parseFloat(d[3]),\n        close: parseFloat(d[4]),\n        volume: parseFloat(d[5]),\n        turnover: parseFloat(d[6])\n      })).reverse();\n    }\n    return null;\n}\n\nexport async function getRecentTradesData(symbol: string): Promise<RecentTrade[] | null> {\n    return getRecentTradesFromApi(symbol);\n}\n\n\n/**\n * Server action to calculate a suite of technical indicators for a symbol and timeframe.\n *\n * @param symbol - The trading symbol.\n * @param timeframe - The chart timeframe.\n * @param settings - Optional custom indicator settings.\n * @returns A promise that resolves to the calculated IndicatorData object or null.\n */\nexport async function getIndicatorData(symbol: string, timeframe: string, settings: IndicatorSettings = defaultIndicatorSettings): Promise<IndicatorData | null> {\n    const klineData = await getKlineData(symbol, timeframe);\n    if (!klineData || klineData.length === 0) return null;\n    return calculateIndicators(klineData, settings);\n}\n\n/**\n * Server action to analyze an order book and identify major support and resistance levels.\n *\n * @param orderBook - The OrderBook object to analyze.\n * @returns A promise resolving to an object with arrays of support and resistance price levels.\n */\nexport async function analyzeOrderBook(orderBook: OrderBook): Promise<{ support: number[]; resistance: number[] }> {\n  const bids = orderBook.bids.map(([price, size]) => ({ price: parseFloat(price), size: parseFloat(size) }));\n  const asks = orderBook.asks.map(([price, size]) => ({ price: parseFloat(price), size: parseFloat(size) }));\n\n  // Helper function to find the levels with the largest order sizes\n  const findLevels = (orders: { price: number; size: number }[], count: number) => {\n    const sorted = [...orders].sort((a, b) => b.size - a.size);\n    return sorted.slice(0, count).map(o => o.price);\n  };\n  \n  const supportLevels = findLevels(bids, 3);\n  const resistanceLevels = findLevels(asks, 3);\n\n  return {\n    support: supportLevels,\n    resistance: resistanceLevels,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1503, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getAiTradingSignal as '70c6125dbbad3595350503c517b30b35b439281e36'} from 'ACTIONS_MODULE0'\nexport {getIndicatorData as '70901addb4aa828fa13a5df1151b80af96986e9baf'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1558, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 1572, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 1586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}