This is a living document outlining potential future enhancements, bug fixes, and ideas for the Bybit Edge application.

---
### High Priority / Next Up
---

- [ ] **Real-time AI Signal Updates**: Instead of a manual "Generate Signal" button, explore having the AI agent periodically re-evaluate the market and push new signals automatically.
- [ ] **Historical Signal Backtesting**: Create a view to show how previously generated AI signals performed over time. This would require storing historical signals.
- [ ] **User Authentication**: Implement user accounts (e.g., using Firebase Auth) to save user preferences, such as default symbols, timeframes, and indicator settings.

---
### AI Agent & Backend Enhancements
---

- [ ] **Multi-Symbol Analysis**: Enhance the AI agent to analyze correlations between multiple symbols (e.g., how BTC price movement might affect ETH).
- [ ] **News/Sentiment Analysis Tool**: Add a new tool for the Genkit flow that scrapes recent financial news or social media sentiment for the given asset and incorporates it into the reasoning.
- [ ] **Advanced Error Handling**: Improve error messages in the AI flow to provide more specific feedback to the user (e.g., "Bybit API is down" vs. "An unknown error occurred").
- [x] **Caching Layer**: Implement a caching strategy (e.g., with Redis or in-memory) for REST API calls in `bybit-api.ts` to reduce redundant requests and avoid rate limits.
- [ ] **WebSocket Service Refactor**: Refactor the WebSocket logic from individual components into a centralized React Context or a shared custom hook (`useBybitWebSocket`) to reduce code duplication and improve state management.

---
### Frontend & UI/UX Improvements
---

- [ ] **Mobile Responsive Improvements**: While the app is usable on mobile, the layout could be optimized further. For example, use a tabbed interface on smaller screens to switch between Order Book, Trades, etc.
- [ ] **UI for Historical Data**: Allow users to scroll back on the TradingView chart and see the corresponding indicator values for that historical point in time.
- [ ] **Add More Indicators**: Expand the `indicator-suite` with more popular technical indicators (e.g., Ichimoku Cloud, Fibonacci Retracement).
- [ ] **TradingView Theme Sync**: Automatically switch the TradingView chart's theme (dark/light) to match the application's theme.
- [ ] **Component Skeletons**: Improve the loading state skeletons to more closely match the shape and layout of the content being loaded for a smoother visual experience.
- [ ] **Accessibility (a11y) Audit**: Perform an audit to ensure all components are fully accessible, with proper ARIA attributes and keyboard navigation.

---
### Quality of Life & Bugs
---

- [ ] **Connection Status**: The WebSocket connection status icons are good, but they could provide more detailed tooltips (e.g., "Connected to Bybit public feed," "Connection failed, retrying...").
- [ ] **Configuration Validation**: Add more robust validation for environment variables on startup to ensure the `GEMINI_API_KEY` is present.
- [ ] **Unit & Integration Tests**: Introduce a testing framework (like Jest or Vitest) and write tests for critical logic, especially for indicator calculations (`indicators.ts`) and API handling (`bybit-api.ts`).
