from collections.abc import Callable
from typing import TypeVar
from typing import Union

from Crypto.PublicKey.RSA import RsaKey

Buffer = Union[bytes, bytearray, memoryview]
T = TypeVar('T')

class PKCS115_Cipher:
    def __init__(self,
                 key: RsaKey,
                 randfunc: Callable[[int], bytes]) -> None: ...
    def can_encrypt(self) -> bool: ...
    def can_decrypt(self) -> bool: ...
    def encrypt(self, message: Buffer) -> bytes: ...
    def decrypt(self, ciphertext: Buffer,
                sentinel: T,
                expected_pt_len: int | None = ...) -> bytes | T: ...

def new(key: RsaKey,
        randfunc: Callable[[int], bytes] | None = ...) -> PKCS115_Cipher: ...
