from typing import Union

from typing_extensions import NotRequired
from typing_extensions import TypedDict
from typing_extensions import Unpack

Buffer = Union[bytes, bytearray, memoryview]

class TurboSHAKE:

    def __init__(self, capacity: int, domain_separation: int, data: Buffer | None) -> None: ...
    def update(self, data: Buffer) -> TurboSHAKE : ...
    def read(self, length: int) -> bytes: ...
    def new(self, data: Buffer | None=None) -> TurboSHAKE: ...

class Args(TypedDict):
    domain: NotRequired[int]
    data: NotRequired[Buffer]

def new(**kwargs: Unpack[Args]) -> TurboSHAKE: ...
